{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { map, size } from \"lodash\";\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\nimport * as Yup from \"yup\";\nimport useApp from \"../../../../../hooks/useApp\";\nimport TagLang from \"../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../modules/Forms/MessageValidation\";\nimport SelectLanguage from \"../../../../components/SelectLanguage\";\nimport GetLanguage from \"../../../../../helper/i18n/getValueTagLang\";\nimport request from \"../../../../../helper/core_services/core/requestService\";\nimport recipes from \"../../../../../helper/core_services/endpoints/recipes\";\nimport { loadElement } from \"../../../../../helper/appearance/load\";\nimport InputPicture from \"../../../../components/Inputs/InputImages/InputImage_1\";\nimport InputTextForm_1 from \"../../../../components/Inputs/InputTypeForm_1/InputTextForm_1\";\nimport InputNumber_1 from \"../../../../components/Inputs/InputTypeForm_1/InputNumber_1\";\nimport InputSelectForm_1 from \"../../../../components/Inputs/InputTypeForm_1/InputSelectForm_1\";\nimport InputCheckForm_1 from \"../../../../components/Inputs/InputTypeForm_1/InputCheckForm_1\";\nimport ScrollError from \"../../../../../helper/scroll/ScrollError\";\nimport SubCategoryCont from \"./SubCategoryCont\";\nimport SubRegionCont from \"./SubRegionCont\";\nimport SubIngredientCont from \"./SubIngredientCont\";\nimport SubDirectionCont from \"./SubDirectionCont\";\nimport SubEquivalentCont from \"./SubEquivalentCont\";\nexport default function NewRecipe({\n  idElement,\n  type,\n  idList,\n  dataRecipe,\n  flagEditRecipe\n}) {\n  var _formik$errors, _formik$errors2, _formik$errors3, _formik$errors4, _formik$errors5, _formik$errors6, _formik$errors7;\n\n  const {\n    locale\n  } = useApp();\n  const router = useRouter();\n  const {\n    0: elementsDiffucult,\n    1: setElementsDiffucult\n  } = useState([]);\n  const {\n    0: equivalents,\n    1: setEquivalents\n  } = useState([]);\n  const {\n    0: showEquivalents,\n    1: setShowEquivalents\n  } = useState(false);\n  const {\n    0: statusLanguage,\n    1: setStatusLanguage\n  } = useState(1);\n  const formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData, {\n      resetForm\n    }) => {\n      if (!(formData !== null && formData !== void 0 && formData.id)) SaveRecipe(formData);else UpdateRecipe(formData);\n    }\n  });\n  useEffect(() => {\n    GetEquivalentsNumber();\n  }, []);\n  useEffect(() => {\n    if (dataRecipe != null) GetData();\n  }, [dataRecipe]);\n  useEffect(() => {\n    GetElementsDifficult();\n  }, [locale]);\n\n  const GetData = async () => {\n    let data = {};\n    let reqEqui = await request(recipes.get_equivalents, null, [idElement], {\n      locale\n    });\n    data = _objectSpread({}, dataRecipe);\n    delete data.nutritionist;\n    data[\"name_es\"] = data.name[\"es\"];\n    data[\"name_en\"] = data.name[\"en-us\"];\n    delete data.name;\n    let directions = map(data.directions, element => {\n      return {\n        direction_es: element.direction[\"es\"],\n        direction_en: element.direction[\"en-us\"]\n      };\n    });\n    data.directions = directions;\n\n    if (size(data.images) > 0) {\n      data.image_check = data.images[0].image;\n      data.image_pic_preview = data.images[0].image;\n      delete data.images;\n    }\n\n    if (size(data.categories) > 0) {\n      data.categories = map(data.categories, element => {\n        return {\n          category: element\n        };\n      });\n    }\n\n    if (size(data.regions) > 0) {\n      data.regions = map(data.regions, element => {\n        return {\n          region: element\n        };\n      });\n    }\n\n    if (size(data.ingredients) > 0) {\n      data.ingredients = map(data.ingredients, element => {\n        return {\n          id: element.id,\n          name: element.food.name,\n          food: element.food.id,\n          category: element.food.category,\n          portion: element.portion.id,\n          quantity: element.quantity,\n          flagLoad: true\n        };\n      });\n    }\n\n    if (reqEqui != null) {\n      let equivalents = [];\n      equivalents = map(reqEqui, element => {\n        return {\n          equivalent: element.equivalent.id,\n          recipe: element.equivalent\n        };\n      });\n      data.equivalents = equivalents;\n      setEquivalents(reqEqui);\n    }\n\n    formik.setValues(data);\n  };\n\n  const GetElementsDifficult = () => {\n    let data = [{\n      name: GetLanguage(\"input\", \"select_diff_1\"),\n      id: \"0\"\n    }, {\n      name: GetLanguage(\"input\", \"select_diff_2\"),\n      id: \"1\"\n    }, {\n      name: GetLanguage(\"input\", \"select_diff_3\"),\n      id: \"2\"\n    }];\n    setElementsDiffucult(data);\n  };\n\n  const SaveRecipe = async formData => {\n    let params = _objectSpread({}, formData);\n\n    params.name = {\n      es: params.name_es,\n      \"en-us\": params.name_en\n    };\n    delete params.name_es;\n    delete params.name_en;\n    params.directions = map(params.directions, element => {\n      return {\n        direction: {\n          es: element.direction_es,\n          \"en-us\": element.direction_en\n        }\n      };\n    });\n    params.categories = map(formData.categories, element => {\n      return element.category;\n    });\n    params.regions = map(formData.regions, element => {\n      return element.region;\n    });\n    loadElement(true);\n    let req = await request(recipes.post_create_recipes, params, [], {\n      locale\n    });\n\n    if (req != null) {\n      await SaveImage(req, params);\n      await SaveEquivalents(req, params);\n      RouteSave();\n    }\n\n    loadElement(false);\n  };\n\n  const UpdateRecipe = async formData => {\n    let params = _objectSpread({}, formData);\n\n    params.name = {\n      es: params.name_es,\n      \"en-us\": params.name_en\n    };\n    delete params.name_es;\n    delete params.name_en;\n    params.directions = map(params.directions, element => {\n      return {\n        direction: {\n          es: element.direction_es,\n          \"en-us\": element.direction_en\n        }\n      };\n    });\n    params.categories = map(formData.categories, element => {\n      return element.category;\n    });\n    params.regions = map(formData.regions, element => {\n      return element.region;\n    });\n    loadElement(true);\n    let req = await request(recipes.patch_update_recipes, params, [idElement], {\n      locale\n    });\n\n    if (req != null) {\n      await SaveImage(req, params);\n      await SaveEquivalents(req, params);\n      RouteSave();\n    }\n\n    loadElement(false);\n  };\n\n  const RouteSave = () => {\n    if (type === \"1\") router.push(`/dashboard/recipes/list_category/${idList}`);\n    if (type === \"2\") router.push(`/dashboard/recipes/list_type/${idList}`);\n  };\n\n  const SaveImage = async (info, params) => {\n    if (params !== null && params !== void 0 && params.image) {\n      let deleteImages = [];\n\n      if (size(info.images) > 0) {\n        map(info.images, element => {\n          deleteImages.push(request(recipes.delete_image, null, [info.id, element.id], {\n            locale\n          }));\n        });\n      }\n\n      await Promise.all(deleteImages);\n      await request(recipes.post_image, {\n        image: params.image\n      }, [info.id], {\n        locale\n      });\n    }\n  };\n\n  const SaveEquivalents = async (info, params) => {\n    let equivalentsNew = [];\n    let deleteEquivalents = [];\n    map(equivalents, element => {\n      let find = params.equivalents.find(obj => {\n        return obj.equivalent === element.equivalent;\n      });\n      if (find == undefined) deleteEquivalents.push(request(recipes.delete_equivalents, null, [info.id, element.id], {\n        locale\n      }));\n    });\n    await Promise.all(deleteEquivalents);\n\n    if (params !== null && params !== void 0 && params.equivalents) {\n      map(params.equivalents, element => {\n        equivalentsNew.push(request(recipes.post_equivalent, {\n          equivalent: element.equivalent\n        }, [info.id], {\n          locale\n        }));\n      });\n      await Promise.all(equivalentsNew);\n    }\n  };\n\n  const GetEquivalentsNumber = async () => {\n    let req = await request(recipes.get_recipe, null, [], {\n      locale\n    });\n    if (req != null) if (size(req) > 0) setShowEquivalents(true);\n  };\n\n  const ClickSend = () => {\n    ScrollError();\n  };\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-5\",\n        children: /*#__PURE__*/_jsx(InputPicture, {\n          formik: formik,\n          name: \"image\",\n          error: formik === null || formik === void 0 ? void 0 : (_formik$errors = formik.errors) === null || _formik$errors === void 0 ? void 0 : _formik$errors[`${\"image\"}_check`],\n          disabled: !flagEditRecipe\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-7\",\n        children: [/*#__PURE__*/_jsx(SelectLanguage, {\n          statusLanguage: statusLanguage,\n          setStatusLanguage: setStatusLanguage,\n          error: formik === null || formik === void 0 ? void 0 : (_formik$errors2 = formik.errors) === null || _formik$errors2 === void 0 ? void 0 : _formik$errors2.language,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-cont-input-2\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"sty-tag\",\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"name\"\n              })\n            }), statusLanguage == 1 && /*#__PURE__*/_jsx(\"div\", {\n              className: \"sty-input\",\n              children: /*#__PURE__*/_jsx(\"input\", {\n                name: `name_es`,\n                type: \"text\",\n                value: formik.values.name_es,\n                onChange: formik.handleChange,\n                disabled: !flagEditRecipe\n              })\n            }), statusLanguage == 2 && /*#__PURE__*/_jsx(\"div\", {\n              className: \"sty-input\",\n              children: /*#__PURE__*/_jsx(\"input\", {\n                name: `name_en`,\n                type: \"text\",\n                value: formik.values.name_en,\n                onChange: formik.handleChange,\n                disabled: !flagEditRecipe\n              })\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row margin-top-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"categories\"\n                })\n              }), /*#__PURE__*/_jsx(FormikProvider, {\n                value: formik,\n                children: /*#__PURE__*/_jsx(FieldArray, {\n                  name: \"categories\",\n                  render: arrayHelpers => /*#__PURE__*/_jsx(SubCategoryCont, {\n                    formik: formik,\n                    arrayHelpers: arrayHelpers,\n                    father: \"categories\",\n                    flagEditRecipe: flagEditRecipe\n                  })\n                })\n              })]\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(InputCheckForm_1, {\n              formik: formik,\n              title: \"public\",\n              name: `isPublic`,\n              value: formik.values.isPublic,\n              error: formik === null || formik === void 0 ? void 0 : (_formik$errors3 = formik.errors) === null || _formik$errors3 === void 0 ? void 0 : _formik$errors3.isPublic,\n              disabled: !flagEditRecipe\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"regions\"\n                })\n              }), /*#__PURE__*/_jsx(FormikProvider, {\n                value: formik,\n                children: /*#__PURE__*/_jsx(FieldArray, {\n                  name: \"regions\",\n                  render: arrayHelpers => /*#__PURE__*/_jsx(SubRegionCont, {\n                    formik: formik,\n                    arrayHelpers: arrayHelpers,\n                    father: \"regions\",\n                    flagEditRecipe: flagEditRecipe\n                  })\n                })\n              })]\n            })\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsx(InputSelectForm_1, {\n              formik: formik,\n              elements: elementsDiffucult,\n              title: \"difficulty\",\n              name: `difficulty`,\n              value: formik.values.difficulty,\n              error: formik === null || formik === void 0 ? void 0 : (_formik$errors4 = formik.errors) === null || _formik$errors4 === void 0 ? void 0 : _formik$errors4.difficulty,\n              disabled: !flagEditRecipe\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsx(InputNumber_1, {\n              formik: formik,\n              title: \"portions\",\n              name: `portions`,\n              value: formik.values.portions,\n              error: formik === null || formik === void 0 ? void 0 : (_formik$errors5 = formik.errors) === null || _formik$errors5 === void 0 ? void 0 : _formik$errors5.portions,\n              disabled: !flagEditRecipe\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: /*#__PURE__*/_jsx(InputTextForm_1, {\n            formik: formik,\n            title: \"instagram\",\n            name: `instagramLink`,\n            value: formik.values.instagramLink,\n            error: formik === null || formik === void 0 ? void 0 : (_formik$errors6 = formik.errors) === null || _formik$errors6 === void 0 ? void 0 : _formik$errors6.instagramLink,\n            disabled: !flagEditRecipe\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-dyna-title-1\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"ingredients\"\n          })\n        }), /*#__PURE__*/_jsx(FormikProvider, {\n          value: formik,\n          children: /*#__PURE__*/_jsx(FieldArray, {\n            name: \"ingredients\",\n            render: arrayHelpers => /*#__PURE__*/_jsx(SubIngredientCont, {\n              formik: formik,\n              arrayHelpers: arrayHelpers,\n              father: \"ingredients\",\n              flagEditRecipe: flagEditRecipe\n            })\n          })\n        }), typeof ((_formik$errors7 = formik.errors) === null || _formik$errors7 === void 0 ? void 0 : _formik$errors7.ingredients) === \"string\" && /*#__PURE__*/_jsx(\"div\", {\n          className: \"validation-array\",\n          children: /*#__PURE__*/_jsx(MessageValidation, {\n            error: formik.errors.ingredients\n          })\n        }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-dyna-title-1\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"preparation\"\n          })\n        }), /*#__PURE__*/_jsx(FormikProvider, {\n          value: formik,\n          children: /*#__PURE__*/_jsx(FieldArray, {\n            name: \"directions\",\n            render: arrayHelpers => /*#__PURE__*/_jsx(SubDirectionCont, {\n              formik: formik,\n              arrayHelpers: arrayHelpers,\n              father: \"directions\",\n              statusLanguage: statusLanguage,\n              setStatusLanguage: setStatusLanguage,\n              flagEditRecipe: flagEditRecipe\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"hr\", {}), showEquivalents && /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-dyna-title-1\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"equivalent_recipes\"\n            })\n          }), /*#__PURE__*/_jsx(FormikProvider, {\n            value: formik,\n            children: /*#__PURE__*/_jsx(FieldArray, {\n              name: \"equivalents\",\n              render: arrayHelpers => /*#__PURE__*/_jsx(SubEquivalentCont, {\n                formik: formik,\n                arrayHelpers: arrayHelpers,\n                father: \"equivalents\",\n                flagEditRecipe: flagEditRecipe\n              })\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12 text-center sty-magin-b-1\",\n        children: [flagEditRecipe && /*#__PURE__*/_jsxs(\"button\", {\n          className: \"sty-button-dash-1\",\n          type: \"submit\",\n          onClick: () => ClickSend(),\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-icon\",\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: \"/static/img/favicons/app/save_w.svg\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"button\",\n              tag: \"save\"\n            })\n          })]\n        }), !flagEditRecipe && /*#__PURE__*/_jsx(\"button\", {\n          className: \"sty-button-dash-1\",\n          type: \"submit\",\n          onClick: () => RouteSave(),\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"button\",\n              tag: \"back\"\n            })\n          })\n        })]\n      })]\n    })\n  });\n}\n\nfunction initialValues() {\n  return {\n    image_check: \"\",\n    name_es: \"\",\n    name_en: \"\",\n    portions: 1,\n    categories: [{}],\n    regions: [{}],\n    directions: [{\n      direction: \"\"\n    }],\n    isPublic: false\n  };\n}\n\nfunction validationSchema() {\n  return {\n    // image_check: Yup.string().required(\"required\"),\n    // name_es: Yup.string().required(\"required\"),\n    // name_en: Yup.string().required(\"required\"),\n    language: Yup.bool().when([\"name_es\", \"name_en\"], {\n      is: (name_es, name_en) => !name_es && !name_en,\n      then: Yup.bool().required(\"fields_language\"),\n      otherwise: Yup.bool()\n    }),\n    categories: Yup.array().of(Yup.object().shape({\n      category: Yup.string().required(\"required\")\n    })),\n    regions: Yup.array().of(Yup.object().shape({\n      region: Yup.string().required(\"required\")\n    })),\n    directions: Yup.array().of(Yup.object().shape({\n      // direction_es: Yup.string().required(\"required\"),\n      // direction_en: Yup.string().required(\"required\"),\n      directionsLanguage: Yup.bool().when([\"direction_es\", \"direction_en\"], {\n        is: (direction_es, direction_en) => !direction_es && !direction_en,\n        then: Yup.bool().required(\"fields_language\"),\n        otherwise: Yup.bool()\n      })\n    })),\n    ingredients: Yup.array().of(Yup.object().shape({\n      portion: Yup.string().required(\"required\"),\n      quantity: Yup.string().required(\"required\")\n    })).required(\"array_ingredients\")\n  };\n}","map":null,"metadata":{},"sourceType":"module"}