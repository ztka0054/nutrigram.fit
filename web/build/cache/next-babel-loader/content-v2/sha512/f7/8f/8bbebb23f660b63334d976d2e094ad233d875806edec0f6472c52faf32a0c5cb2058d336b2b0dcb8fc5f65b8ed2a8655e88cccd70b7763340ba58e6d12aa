{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport { Collapse, CardBody, Card } from \"reactstrap\";\nimport TagLang from \"../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../modules/Forms/MessageValidation\";\nimport GetLanguage from \"../../../../../helper/i18n/getValueTagLang\";\nimport foods from \"../../../../../helper/core_services/endpoints/foods\";\nimport TablePag from \"../../../../modules/Dashboard/Table/TablePagination\";\nimport Rows from \"./SubIngredientEquivalentRow\";\nimport InputTextForm_1 from \"../../../../components/Inputs/InputTypeForm_1/InputTextForm_1\";\nimport InputNumber_1 from \"../../../../components/Inputs/InputTypeForm_1/InputNumber_1\";\nimport InputSelectForm_1 from \"../../../../components/Inputs/InputTypeForm_1/InputSelectForm_1\";\nexport default function SubIngredientFields({\n  formik,\n  arrayHelpers,\n  father,\n  index,\n  unities,\n  flagEditRecipe\n}) {\n  var _formik$errors$father, _formik$errors$father2, _formik$errors$father3, _formik$errors$father4, _formik$errors$father5, _formik$errors$father6;\n\n  const elementArray = formik.values[father][index];\n  const {\n    0: flagButton,\n    1: setFlagButton\n  } = useState(true);\n  const {\n    0: showTable,\n    1: setShowTable\n  } = useState(false);\n  const {\n    0: toogleCollapse,\n    1: setToogleCollapse\n  } = useState(false);\n  const {\n    0: suggestedQuantity,\n    1: setSuggestedQuantity\n  } = useState(0);\n  useEffect(() => {\n    if ((elementArray === null || elementArray === void 0 ? void 0 : elementArray.portion) != \"\" && (elementArray === null || elementArray === void 0 ? void 0 : elementArray.quantity) != \"\") {\n      setFlagButton(false);\n      setShowTable(true);\n    } else {\n      setFlagButton(true);\n      setShowTable(false);\n    }\n  }, [elementArray.portion, elementArray.quantity]);\n  useEffect(() => {\n    FindSugestion();\n  }, [elementArray.portion]);\n\n  const FindSugestion = () => {\n    if (unities != null) {\n      let finder = unities.find(obj => `${obj.id}` === elementArray.portion);\n      setSuggestedQuantity(finder.suggestedQuantity);\n    }\n  };\n\n  const selectEquivalent = (row, quantity) => {\n    formik.setFieldValue(`${father}[${index}].food`, row.id);\n    formik.setFieldValue(`${father}[${index}].quantity`, quantity);\n    setToogleCollapse(false);\n  };\n\n  const ShowEquivalents = () => {\n    setToogleCollapse(!toogleCollapse);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\" // key={index}\n      ,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-5\",\n        children: /*#__PURE__*/_jsx(InputTextForm_1, {\n          formik: formik,\n          title: \"ingredient\",\n          name: `${father}[${index}].name`,\n          value: formik.values[father][index].name,\n          error: (_formik$errors$father = formik.errors[father]) === null || _formik$errors$father === void 0 ? void 0 : (_formik$errors$father2 = _formik$errors$father[index]) === null || _formik$errors$father2 === void 0 ? void 0 : _formik$errors$father2.name,\n          disabled: !flagEditRecipe\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsx(InputSelectForm_1, {\n          formik: formik,\n          elements: unities,\n          title: \"unit\",\n          name: `${father}[${index}].portion`,\n          value: formik.values[father][index].portion,\n          error: (_formik$errors$father3 = formik.errors[father]) === null || _formik$errors$father3 === void 0 ? void 0 : (_formik$errors$father4 = _formik$errors$father3[index]) === null || _formik$errors$father4 === void 0 ? void 0 : _formik$errors$father4.portion,\n          disabled: !flagEditRecipe\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsx(InputNumber_1, {\n          formik: formik,\n          title: \"quantity\",\n          name: `${father}[${index}].quantity`,\n          value: formik.values[father][index].quantity,\n          error: (_formik$errors$father5 = formik.errors[father]) === null || _formik$errors$father5 === void 0 ? void 0 : (_formik$errors$father6 = _formik$errors$father5[index]) === null || _formik$errors$father6 === void 0 ? void 0 : _formik$errors$father6.quantity,\n          disabled: !flagEditRecipe\n        })\n      }), flagEditRecipe && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-2 align-self-center\",\n          children: /*#__PURE__*/_jsx(\"button\", {\n            className: \"sty-button-dash-1 fix-icon color-2\",\n            type: \"button\",\n            onClick: () => ShowEquivalents(),\n            disabled: flagButton,\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"sty-text\",\n              children: \"Equivalentes\"\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-1 align-self-center\",\n          children: /*#__PURE__*/_jsx(\"button\", {\n            className: \"sty-button-dash-1 fix-icon\",\n            type: \"button\",\n            onClick: () => arrayHelpers.remove(index),\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"sty-icon\",\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: \"/static/img/favicons/app/rem_w.svg\"\n              })\n            })\n          })\n        })]\n      })]\n    }), showTable && /*#__PURE__*/_jsx(\"div\", {\n      className: \"sty-content-data-1\",\n      children: /*#__PURE__*/_jsx(Collapse, {\n        isOpen: toogleCollapse,\n        className: \"sty-data-content\",\n        children: /*#__PURE__*/_jsx(Card, {\n          children: /*#__PURE__*/_jsx(CardBody, {\n            children: /*#__PURE__*/_jsx(TablePag, {\n              titles: [/*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"name\"\n              }), /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"unit\"\n              }), /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"quantity\"\n              }), /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"cal\"\n              }), /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"prot\"\n              }), /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"lip\"\n              }), /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"options\"\n              })],\n              titleTable: `${GetLanguage(\"dashboard\", \"tit_recipe_1_6\")}: ${elementArray.name}`,\n              classCustomTitle: \"color-1\",\n              tagCount: \"\",\n              pageSize: 10,\n              endpoint: foods.get_food_equivalents,\n              params: {\n                category: elementArray.category\n              },\n              Rows: Rows,\n              customFunction: selectEquivalent,\n              values: {\n                quantity: elementArray.quantity,\n                suggested: suggestedQuantity\n              }\n            })\n          })\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}