{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport moment from \"moment\";\nimport { size } from \"lodash\";\nimport useApp from \"../../../../../../hooks/useApp\";\nimport ModalDelete from \"../../../../../modules/Dashboard/Table/ModalDelete\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport blog from \"../../../../../../helper/core_services/endpoints/blog\";\nimport consulation from \"../../../../../../helper/core_services/endpoints/consulation\";\nimport { loadElement } from \"../../../../../../helper/appearance/load\";\nimport fixDate from \"../../../../../../helper/date/fixDateTimeService\";\nexport default function Rows({\n  row,\n  UpdateTable\n}) {\n  const router = useRouter();\n  const {\n    locale\n  } = useApp();\n  const {\n    0: flagModal,\n    1: setFlagModal\n  } = useState(false);\n  const {\n    0: idElement,\n    1: setIdElement\n  } = useState(null);\n  const {\n    0: datePast,\n    1: setDatePast\n  } = useState(null);\n  const {\n    0: dateNext,\n    1: setDateNExt\n  } = useState(null);\n  useEffect(() => {\n    getPastConsulation();\n  }, []);\n  useEffect(() => {\n    getNextConsulation();\n  }, []);\n\n  const getPastConsulation = async () => {\n    let reqLast = await request(consulation.get_consulations, {\n      ordering: \"-datetime\",\n      datetime__lte: `${moment().format(\"YYYY-MM-DDTHH:MM:ss\")}`,\n      page_size: 1\n    }, [row.id], {\n      locale\n    });\n    if (reqLast != null) if (size(reqLast.result) > 0) setDatePast(fixDate(reqLast.result[0].datetime).format(\"YYYY-MM-DD\"));\n  };\n\n  const getNextConsulation = async () => {\n    let reqLast = await request(consulation.get_consulations, {\n      ordering: \"datetime\",\n      datetime__gte: `${moment().format(\"YYYY-MM-DDTHH:MM:ss\")}`,\n      page_size: 1\n    }, [row.id], {\n      locale\n    });\n    if (reqLast != null) if (size(reqLast.result) > 0) setDateNExt(fixDate(reqLast.result[0].datetime).format(\"YYYY-MM-DD\"));\n  };\n\n  const ShowDetail = id => {\n    router.push(`/dashboard/patients/detail/${id}`);\n  };\n\n  const ShowModal = id => {\n    toogleModal();\n    setIdElement(id);\n  };\n\n  const DeleteRow = async () => {\n    toogleModal();\n    loadElement(true);\n    let req = await request(blog.delete_blog, {}, [idElement], {\n      locale\n    });\n    loadElement(false);\n\n    if (req != null) {\n      UpdateTable();\n    }\n  };\n\n  const toogleModal = () => {\n    setFlagModal(!flagModal);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"tr\", {\n      onClick: () => ShowDetail(row.id),\n      children: [/*#__PURE__*/_jsx(\"td\", {\n        children: `${row.firstName} ${row.lastName}`\n      }), /*#__PURE__*/_jsx(\"td\", {\n        children: row.birthday\n      }), /*#__PURE__*/_jsx(\"td\", {\n        children: row.email\n      }), /*#__PURE__*/_jsx(\"td\", {\n        children: row.phone\n      }), /*#__PURE__*/_jsx(\"td\", {\n        children: datePast\n      }), /*#__PURE__*/_jsx(\"td\", {\n        children: dateNext\n      })]\n    }), /*#__PURE__*/_jsx(ModalDelete, {\n      flagModal: flagModal,\n      toogleModalChild: toogleModal,\n      functionButton: DeleteRow\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}