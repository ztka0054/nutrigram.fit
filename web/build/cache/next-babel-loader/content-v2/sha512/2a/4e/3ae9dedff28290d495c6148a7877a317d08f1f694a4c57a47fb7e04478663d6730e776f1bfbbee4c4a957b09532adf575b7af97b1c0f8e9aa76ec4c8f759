{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from \"react\";\nimport { map } from \"lodash\";\nimport TagLang from \"../../../modules/GetTagLang\";\nexport default function Pagination({\n  pageSize,\n  total,\n  page,\n  setPage\n}) {\n  const maxSize = 5;\n  const limit = 2;\n  const {\n    0: numberPages,\n    1: setNumberPages\n  } = useState(0);\n  const {\n    0: arrayNumbers,\n    1: setArrayNumbers\n  } = useState([]);\n  const {\n    0: elements,\n    1: setElements\n  } = useState([]);\n  useEffect(() => {\n    let totalPages = total / pageSize;\n    setNumberPages(Math.ceil(totalPages));\n  }, [total, pageSize]);\n  useEffect(() => {\n    if (numberPages != 0) {\n      if (numberPages <= maxSize) DrawNumbersSize();else DrawNumbersNoSize();\n    }\n  }, [numberPages, page]);\n  useEffect(() => {\n    let elements = map(arrayNumbers, (element, index) => {\n      let flag = element == page;\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: `${page == element ? \"sty-pag-ele\" : \"sty-pag-points\"} ${flag ? \"sty-select\" : \"\"}`,\n        onClick: () => {\n          setPage(element);\n        },\n        children: element\n      }, `number_${index}`);\n    });\n    setElements(elements);\n  }, [arrayNumbers]);\n\n  const DrawNumbersSize = () => {\n    let numbers = [];\n\n    for (let index = 1; index <= numberPages; index++) {\n      numbers.push(index);\n    }\n\n    setArrayNumbers(numbers);\n  };\n\n  const DrawNumbersNoSize = () => {\n    let numbers = [];\n    if (page <= limit) for (let index = 1; index <= maxSize; index++) {\n      numbers.push(index);\n    }\n    if (page > limit && page <= numberPages - limit) for (let index = page - limit; index <= page + limit; index++) {\n      numbers.push(index);\n    }\n    if (page > numberPages - limit) for (let index = numberPages - maxSize + 1; index <= numberPages; index++) {\n      numbers.push(index);\n    }\n    setArrayNumbers(numbers);\n  };\n\n  const restPage = () => {\n    if (page > 1) setPage(page - 1);\n  };\n\n  const AddPage = () => {\n    if (page < numberPages) setPage(page + 1);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: numberPages > 0 && /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row sty-cont-pagination\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12 text-center sty-cont-pag\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-pag-ele\",\n          onClick: () => restPage(),\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/static/img/favicons/app/prev.svg\"\n          })\n        }, `right_tabL_arrow`), elements, /*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-pag-ele\",\n          onClick: () => AddPage(),\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/static/img/favicons/app/next.svg\"\n          })\n        }, `right_tabR_row`)]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12 text-right sty-cont-total\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-tag\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"table_tag_1\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-data\",\n          children: total\n        })]\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}