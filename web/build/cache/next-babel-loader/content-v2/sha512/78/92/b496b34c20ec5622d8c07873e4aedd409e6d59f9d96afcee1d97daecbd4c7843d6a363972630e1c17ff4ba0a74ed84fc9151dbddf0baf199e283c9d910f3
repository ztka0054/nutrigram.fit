{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\nimport * as Yup from \"yup\";\nimport { map } from \"lodash\";\nimport moment from \"moment\";\nimport useApp from \"../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../../modules/Forms/MessageValidation\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport apiMedicalRecords from \"../../../../../../helper/core_services/endpoints/medical_records\";\nimport menu from \"../../../../../../helper/core_services/endpoints/menu\";\nimport GetLanguages from \"../../../../../../helper/i18n/getValueTagLang\";\nimport { loadElement } from \"../../../../../../helper/appearance/load\";\nimport FormSubContHabitual from \"./FormSubContHabitual\";\nimport FieldRadio from \"../../../../../../helper/forms/elements/radio\";\nvar icon_title = \"/static/img/favicons/app/icon_nu_1.png\";\n\nvar getTime = function getTime(id) {\n  var time = null;\n\n  switch (id) {\n    case 1:\n      time = \"08:00\";\n      break;\n\n    case 3:\n      time = \"12:00\";\n      break;\n\n    case 2:\n      time = \"14:00\";\n      break;\n\n    case 4:\n      time = \"18:00\";\n      break;\n\n    case 5:\n      time = \"20:00\";\n      break;\n\n    default:\n      time = \"08:00\";\n      break;\n  }\n\n  return time;\n};\n\nvar valuesRadioInit = [{\n  tag: /*#__PURE__*/_jsx(TagLang, {\n    group: \"input\",\n    tag: \"no\"\n  }),\n  value: false\n}, {\n  tag: /*#__PURE__*/_jsx(TagLang, {\n    group: \"input\",\n    tag: \"yes\"\n  }),\n  value: true\n}];\nexport default function FormDietetic(_ref) {\n  var _ref$idPatient = _ref.idPatient,\n      idPatient = _ref$idPatient === void 0 ? null : _ref$idPatient,\n      setFormDiet = _ref.setFormDiet,\n      setFlagSendDiet = _ref.setFlagSendDiet;\n\n  var _useApp = useApp(),\n      locale = _useApp.locale;\n\n  var _useState = useState({}),\n      flagsFields = _useState[0],\n      setFlagsFields = _useState[1];\n\n  var _useState2 = useState([]),\n      valuesRadio = _useState2[0],\n      setValuesRadio = _useState2[1];\n\n  var formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, _ref2) {\n        var resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm;\n                if (idPatient == null) SendForm(formData, resetForm);\n                if (idPatient != null) UpdateForm(formData);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect(function () {\n    setFormDiet(formik);\n  }, []);\n  useEffect(function () {\n    if (idPatient != null) getInformation();\n  }, [idPatient]);\n  useEffect(function () {\n    GetFlagsActive();\n  }, []);\n  useEffect(function () {\n    GetDietHabitual();\n  }, []);\n  useEffect(function () {\n    setValuesRadio(valuesRadioInit);\n  }, [locale]);\n\n  var GetFlagsActive = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var req;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return request(apiMedicalRecords.get_settings_medical, null, null, {\n                locale: locale\n              }, false);\n\n            case 2:\n              req = _context2.sent;\n\n              if (req != null) {\n                setFlagsFields(req);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function GetFlagsActive() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getInformation = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var values, req, reqType, reqMeal, diets;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              values = [];\n              _context3.next = 3;\n              return request(apiMedicalRecords.get_diet, null, [idPatient], {\n                locale: locale\n              }, false);\n\n            case 3:\n              req = _context3.sent;\n\n              if (req != null) {\n                values = _objectSpread({}, req);\n              }\n\n              _context3.next = 7;\n              return request(menu.get_meals_type, null, null, locale);\n\n            case 7:\n              reqType = _context3.sent;\n              _context3.next = 10;\n              return request(apiMedicalRecords.get_meal, null, [idPatient], {\n                locale: locale\n              }, false);\n\n            case 10:\n              reqMeal = _context3.sent;\n              diets = map(reqType, function (element, index) {\n                var time = getTime(element.id);\n                var find = reqMeal.find(function (obj) {\n                  return obj.type == element.id;\n                });\n                if (find == undefined) return _objectSpread(_objectSpread({}, element), {}, {\n                  time: moment(\"\".concat(moment().format(\"YYYY-MM-DD\"), \" \").concat(time)).toDate(),\n                  diet: \"\",\n                  place: \"\",\n                  type: element.id\n                });else {\n                  return _objectSpread(_objectSpread({}, element), {}, {\n                    time: moment(\"\".concat(moment().format(\"YYYY-MM-DD\"), \" \").concat(find.time)).toDate(),\n                    diet: find.diet,\n                    place: find.place,\n                    type: element.id\n                  });\n                }\n              });\n              values.diets = diets;\n              formik.setValues(values);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getInformation() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var GetDietHabitual = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var req, initFormik;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return request(menu.get_meals_type, null, null, {\n                locale: locale\n              });\n\n            case 2:\n              req = _context4.sent;\n\n              if (req != null) {\n                initFormik = map(req, function (element) {\n                  var time = getTime(element.id);\n                  return _objectSpread(_objectSpread({}, element), {}, {\n                    time: moment(\"\".concat(moment().format(\"YYYY-MM-DD\"), \"T\").concat(time)).toDate(),\n                    diet: \"\",\n                    place: \"\",\n                    type: element.id\n                  });\n                });\n                formik.setFieldValue(\"diets\", initFormik);\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function GetDietHabitual() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var SendForm = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(formData) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              loadElement(true);\n              _context5.next = 3;\n              return request(apiMedicalRecords.post_new_diet, formData, [formData.idUser], {\n                locale: locale\n              });\n\n            case 3:\n              _context5.next = 5;\n              return SaveMeals(formData, {\n                idUser: formData.idUser\n              });\n\n            case 5:\n              setFlagSendDiet(true);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function SendForm(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var SaveMeals = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(formData, info) {\n      var arrayRequest;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              arrayRequest = [];\n              map(formData.diets, function (element) {\n                if (element.diet != \"\" && element.place != \"\") {\n                  var params = _objectSpread({}, element);\n\n                  params.time = \"\".concat(moment(params.time).format(\"HH:mm\"), \":00\");\n                  arrayRequest.push(request(apiMedicalRecords.post_new_meal, params, [info.idUser], {\n                    locale: locale\n                  }));\n                }\n              });\n              loadElement(true);\n              _context6.next = 5;\n              return Promise.all(arrayRequest);\n\n            case 5:\n              loadElement(false);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function SaveMeals(_x4, _x5) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var UpdateForm = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(formData) {\n      var diets;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              loadElement(true);\n              _context7.next = 3;\n              return request(apiMedicalRecords.patch_diet, formData, [idPatient], {\n                locale: locale\n              });\n\n            case 3:\n              diets = [];\n              map(formData.diets, function (element) {\n                if (element.diet != \"\" && element.place != \"\") {\n                  var params = _objectSpread({}, element);\n\n                  params.time = \"\".concat(moment(params.time).format(\"HH:mm\"), \":00\");\n                  diets.push(params);\n                }\n              });\n              _context7.next = 7;\n              return request(apiMedicalRecords.put_meal, diets, [idPatient], {\n                locale: locale\n              });\n\n            case 7:\n              loadElement(false);\n              setFlagSendDiet(true);\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function UpdateForm(_x6) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"diet_text\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"previousDiet\",\n              value: formik.values.previousDiet,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.previousDiet\n            })]\n          })]\n        })\n      }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.alcohol) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"alcohol\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(FieldRadio, {\n              formik: formik,\n              name: \"alcohol\",\n              values: valuesRadio\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.alcohol\n            })]\n          })]\n        })\n      }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.smoke) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"smoke\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(FieldRadio, {\n              formik: formik,\n              name: \"smoke\",\n              values: valuesRadio\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.smoke\n            })]\n          })]\n        })\n      }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.meals) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"how_many_foods\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              name: \"meals\",\n              value: formik.values.meals,\n              onChange: formik.handleChange,\n              type: \"number\"\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.meals\n            })]\n          })]\n        })\n      }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.allergies) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"allergies_text\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"allergies\",\n              value: formik.values.allergies,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.allergies\n            })]\n          })]\n        })\n      }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.restrictions) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"restrictions_text\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"restrictions\",\n              value: formik.values.restrictions,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.restrictions\n            })]\n          })]\n        })\n      }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.dislikes) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"dislikes_text\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"dislikes\",\n              value: formik.values.dislikes,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.dislikes\n            })]\n          })]\n        })\n      }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.preferred) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"like_food\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"preferred\",\n              value: formik.values.preferred,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.preferred\n            })]\n          })]\n        })\n      }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.dietNotes) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"notes\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"notes\",\n              value: formik.values.notes,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.notes\n            })]\n          })]\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"sty-title-secction-1\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"text\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"input\",\n          tag: \"usual_diet\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: icon_title\n        })\n      })]\n    }), /*#__PURE__*/_jsx(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsx(FieldArray, {\n        name: \"diets\",\n        render: function render(arrayHelpers) {\n          return /*#__PURE__*/_jsx(FormSubContHabitual, {\n            formik: formik,\n            arrayHelpers: arrayHelpers,\n            father: \"diets\"\n          });\n        }\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.water) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"water\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"water\",\n              value: formik.values.water,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.water\n            })]\n          })]\n        })\n      }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.coffee) && /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"coffee\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(FieldRadio, {\n              formik: formik,\n              name: \"coffee\",\n              values: valuesRadio\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.coffee\n            })]\n          })]\n        })\n      })]\n    })]\n  });\n}\n\nfunction initialValues() {\n  return {\n    previousDiet: \"\",\n    alcohol: false,\n    smoke: false,\n    meals: 0,\n    allergies: \"\",\n    restrictions: \"\",\n    dislikes: \"\",\n    preferred: \"\",\n    notes: \"\",\n    diets: [],\n    water: \"\",\n    coffee: false\n  };\n}\n\nfunction validationSchema() {\n  return {};\n}","map":null,"metadata":{},"sourceType":"module"}