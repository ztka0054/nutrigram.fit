{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TagLang from \"../../../../../../modules/GetTagLang\";\nimport utcFormat from \"../../../../../../../helper/date/utcFormat\";\nimport { getHourDateTime, addTimeToDateTime } from \"../../../../../../../helper/date/getTimeZoneData\";\nimport request from \"../../../../../../../helper/core_services/core/requestService\";\nimport ApiAppoinments from \"../../../../../../../helper/core_services/endpoints/appointments\";\nimport style from \"./formNew.module.scss\";\nvar pic = \"/static/img/favicons/app/human.png\";\nexport default function ChangeAppoinment(_ref) {\n  var _selectAppoiment$pati, _selectAppoiment$pati2, _selectAppoiment$pati3, _formik$errors;\n\n  var dateSelect = _ref.dateSelect,\n      setStateModal = _ref.setStateModal,\n      setActiveRefresh = _ref.setActiveRefresh,\n      selectAppoiment = _ref.selectAppoiment,\n      activeRefreshList = _ref.activeRefreshList,\n      setActiveRefreshList = _ref.setActiveRefreshList;\n  var router = useRouter();\n  useEffect(function () {\n    if (dateSelect) formik.setFieldValue(\"date\", utcFormat(dateSelect));else formik.setFieldValue(\"date\", \"\");\n  }, [dateSelect]);\n  var formik = useFormik({\n    validateOnChange: false,\n    validateOnBlur: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, _ref2) {\n        var resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm;\n                ChangeElement(formData);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n\n  var ChangeElement = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData) {\n      var params, result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              params = {\n                state: formData.state\n              };\n\n              if ((formData === null || formData === void 0 ? void 0 : formData.state) == 2) {\n                params.datetime = selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.suggestedDatetime;\n              }\n\n              _context2.next = 4;\n              return request(ApiAppoinments.patch_edit_appointment, params, [selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.id], {\n                locale: router.locale\n              });\n\n            case 4:\n              result = _context2.sent;\n\n              if (result) {\n                setStateModal(false);\n                setActiveRefresh(true);\n                setActiveRefreshList(!activeRefreshList);\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function ChangeElement(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: style.contUser,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.contPicture,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: style.picture,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: selectAppoiment !== null && selectAppoiment !== void 0 && (_selectAppoiment$pati = selectAppoiment.patient) !== null && _selectAppoiment$pati !== void 0 && _selectAppoiment$pati.picture ? selectAppoiment.patient.picture : pic\n          })\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.nameUser,\n        children: [!(selectAppoiment !== null && selectAppoiment !== void 0 && selectAppoiment.patient) && /*#__PURE__*/_jsx(\"div\", {\n          className: style.unselectUser,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"new_none_patient\"\n          })\n        }), (selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.patient) && /*#__PURE__*/_jsx(\"div\", {\n          children: \"\".concat(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : (_selectAppoiment$pati2 = selectAppoiment.patient) === null || _selectAppoiment$pati2 === void 0 ? void 0 : _selectAppoiment$pati2.firstName, \" \").concat(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : (_selectAppoiment$pati3 = selectAppoiment.patient) === null || _selectAppoiment$pati3 === void 0 ? void 0 : _selectAppoiment$pati3.lastName)\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.conDataChange,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: style.dataInfo,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"\".concat(style.titleSection, \" \").concat(style.color1),\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"title_1_change_quote\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.contDataInfo,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"\".concat(style.element, \" \").concat(style.date),\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"date\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: moment(utcFormat(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.datetime)).locale(router.locale).format(\"dddd, MMMM DD\")\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.element,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"from_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: getHourDateTime(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.datetime)\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.element,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"to_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: addTimeToDateTime(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.datetime, selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.duration)\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: style.lineChange\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.dataInfo,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"\".concat(style.titleSection, \" \").concat(style.color2),\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"title_2_change_quote\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.contDataInfo,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"\".concat(style.element, \" \").concat(style.date),\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"date\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: moment(utcFormat(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.suggestedDatetime)).locale(router.locale).format(\"dddd, MMMM DD\")\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.element,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"from_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: getHourDateTime(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.suggestedDatetime)\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.element,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"to_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: addTimeToDateTime(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.suggestedDatetime, selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.duration)\n            })]\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: style === null || style === void 0 ? void 0 : style.error,\n      children: formik === null || formik === void 0 ? void 0 : (_formik$errors = formik.errors) === null || _formik$errors === void 0 ? void 0 : _formik$errors.patient\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.contButtons,\n      children: [/*#__PURE__*/_jsx(\"button\", {\n        className: style.buttonCancel,\n        onClick: function onClick() {\n          return formik.setFieldValue(\"state\", 3);\n        },\n        type: \"submit\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"button\",\n          tag: \"cancel_appoiment\"\n        })\n      }), /*#__PURE__*/_jsx(\"button\", {\n        className: style.buttonAccept,\n        onClick: function onClick() {\n          return formik.setFieldValue(\"state\", 2);\n        },\n        type: \"submit\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"button\",\n          tag: \"accept_appoiment\"\n        })\n      })]\n    })]\n  });\n}\n\nfunction initialValues() {\n  return {\n    state: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    state: Yup.string().required(\"required\")\n  };\n}","map":null,"metadata":{},"sourceType":"module"}