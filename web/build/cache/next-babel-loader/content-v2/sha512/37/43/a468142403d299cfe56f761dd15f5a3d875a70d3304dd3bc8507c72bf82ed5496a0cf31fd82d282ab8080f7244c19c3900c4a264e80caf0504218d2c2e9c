{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { Collapse, CardBody, Card } from \"reactstrap\";\nimport { map, size } from \"lodash\";\nimport useApp from \"../../../../../hooks/useApp\";\nimport TagLang from \"../../../../modules/GetTagLang\";\nimport request from \"../../../../../helper/core_services/core/requestService\";\nimport foods from \"../../../../../helper/core_services/endpoints/foods\";\nimport TablePag from \"../../../../modules/Dashboard/Table/TablePagination\";\nimport Rows from \"./SubIngredientRow\";\nimport SubIngredientFields from \"./SubIngredientFields\";\nexport default function SubIngredientColapse(_ref) {\n  var formik = _ref.formik,\n      arrayHelpers = _ref.arrayHelpers,\n      father = _ref.father,\n      content = _ref.content,\n      index = _ref.index,\n      flagEditRecipe = _ref.flagEditRecipe;\n\n  var _useApp = useApp(),\n      locale = _useApp.locale;\n\n  var _useState = useState(true),\n      flagCollapse = _useState[0],\n      setflagCollapse = _useState[1];\n\n  var _useState2 = useState(null),\n      unities = _useState2[0],\n      setUnities = _useState2[1];\n\n  var valuesElement = formik.values[father][index];\n  useEffect(function () {\n    var id = valuesElement === null || valuesElement === void 0 ? void 0 : valuesElement.food;\n    if (id) GetEquivalent(id);\n  }, [valuesElement.food]);\n  useEffect(function () {\n    if (valuesElement !== null && valuesElement !== void 0 && valuesElement.flagLoad) setflagCollapse(false);\n  }, [valuesElement === null || valuesElement === void 0 ? void 0 : valuesElement.flagLoad]);\n\n  var SelectIngredient = function SelectIngredient(row) {\n    setflagCollapse(false);\n    formik.setFieldValue(\"\".concat(father, \"[\").concat(index, \"].food\"), row.id);\n    formik.setFieldValue(\"\".concat(father, \"[\").concat(index, \"].name\"), row.name);\n    formik.setFieldValue(\"\".concat(father, \"[\").concat(index, \"].category\"), row.category);\n  };\n\n  var GetEquivalent = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var req;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return request(foods.get_food, null, [id], {\n                locale: locale\n              });\n\n            case 2:\n              req = _context.sent;\n              setUnities(req.portions);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function GetEquivalent(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!flagCollapse && /*#__PURE__*/_jsx(SubIngredientFields, {\n      formik: formik,\n      arrayHelpers: arrayHelpers,\n      father: father,\n      content: content,\n      index: index,\n      unities: unities,\n      flagEditRecipe: flagEditRecipe\n    }), /*#__PURE__*/_jsx(Collapse, {\n      isOpen: flagCollapse,\n      className: \"sty-data-content\",\n      children: /*#__PURE__*/_jsx(Card, {\n        children: /*#__PURE__*/_jsx(CardBody, {\n          children: /*#__PURE__*/_jsx(TablePag, {\n            titles: [/*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"name\"\n            }), /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"options\"\n            })],\n            titleTable: /*#__PURE__*/_jsx(TagLang, {\n              group: \"dashboard\",\n              tag: \"tit_recipe_1_4_1\"\n            }),\n            tagCount: \"\",\n            pageSize: 10,\n            endpoint: foods.get_foods,\n            Rows: Rows,\n            customFunction: SelectIngredient\n          })\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}