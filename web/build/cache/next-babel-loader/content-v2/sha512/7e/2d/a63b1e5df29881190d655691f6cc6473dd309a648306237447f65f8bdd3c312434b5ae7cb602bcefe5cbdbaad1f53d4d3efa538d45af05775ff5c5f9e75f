{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alex9\\\\Nutrigram_Web\\\\web\\\\contexts\\\\AppAuth.js\";\nimport React, { useState, useEffect, createContext, useMemo } from \"react\";\nimport { setToken, getToken, removeToken } from \"../utils/localStorage\";\nimport { setPic, getPic, removePic } from \"../utils/localStorage\";\nimport { setIdNutritionist, getIdNutritionist, removeIdNutritionist } from \"../utils/localStorage\"; //Context\n\nexport const AppContext = /*#__PURE__*/createContext(null); //Provider\n\nconst AppContextProvider = ({\n  children\n}) => {\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(undefined);\n  const {\n    0: flagLogin,\n    1: setFlagLogin\n  } = useState(false);\n  const {\n    0: reloadUser,\n    1: setReloadUser\n  } = useState(false);\n  const {\n    0: isReady,\n    1: setIsReady\n  } = useState(false);\n  useEffect(() => {\n    const token = getToken();\n    const picture = getPic();\n    const idNutritionist = getIdNutritionist();\n\n    if (token) {\n      setAuth({\n        token,\n        picture,\n        idNutritionist\n      });\n      setFlagLogin(true);\n    } else {\n      setAuth(null);\n      setFlagLogin(false);\n    }\n\n    setReloadUser(false);\n    setIsReady(true);\n  }, [reloadUser, isReady]);\n\n  const login = user => {\n    setFlagLogin(true);\n    setToken(user.token);\n    setPic(user.picture);\n    setIdNutritionist(user.id);\n    setAuth({\n      token: user.token,\n      picture: user.picture,\n      idNutritionist: user.id\n    });\n  };\n\n  const logout = () => {\n    if (auth) {\n      removeToken();\n      removePic();\n      removeIdNutritionist();\n      setAuth(null);\n      setFlagLogin(false);\n    }\n  };\n\n  const authData = useMemo(() => ({\n    auth,\n    flagLogin,\n    login,\n    logout,\n    setReloadUser,\n    isReady\n  }), [auth, isReady]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: authData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\nexport default AppContextProvider;","map":{"version":3,"sources":["C:/Users/alex9/Nutrigram_Web/web/contexts/AppAuth.js"],"names":["React","useState","useEffect","createContext","useMemo","setToken","getToken","removeToken","setPic","getPic","removePic","setIdNutritionist","getIdNutritionist","removeIdNutritionist","AppContext","AppContextProvider","children","auth","setAuth","undefined","flagLogin","setFlagLogin","reloadUser","setReloadUser","isReady","setIsReady","token","picture","idNutritionist","login","user","id","logout","authData"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,EAAoDC,OAApD,QAAmE,OAAnE;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,QAAgD,uBAAhD;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,SAAzB,QAA0C,uBAA1C;AACA,SACIC,iBADJ,EAEIC,iBAFJ,EAGIC,oBAHJ,QAIO,uBAJP,C,CAMA;;AACA,OAAO,MAAMC,UAAU,gBAAGX,aAAa,CAAC,IAAD,CAAhC,C,CAEP;;AACA,MAAMY,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBjB,QAAQ,CAACkB,SAAD,CAAhC;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACqB,UAAD;AAAA,OAAaC;AAAb,MAA8BtB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACuB,OAAD;AAAA,OAAUC;AAAV,MAAwBxB,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,KAAK,GAAGpB,QAAQ,EAAtB;AACA,UAAMqB,OAAO,GAAGlB,MAAM,EAAtB;AACA,UAAMmB,cAAc,GAAGhB,iBAAiB,EAAxC;;AACA,QAAIc,KAAJ,EAAW;AACPR,MAAAA,OAAO,CAAC;AAAEQ,QAAAA,KAAF;AAASC,QAAAA,OAAT;AAAkBC,QAAAA;AAAlB,OAAD,CAAP;AACAP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAHD,MAGO;AACHH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACDE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAbQ,EAaN,CAACH,UAAD,EAAaE,OAAb,CAbM,CAAT;;AAeA,QAAMK,KAAK,GAAIC,IAAD,IAAU;AACpBT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAhB,IAAAA,QAAQ,CAACyB,IAAI,CAACJ,KAAN,CAAR;AACAlB,IAAAA,MAAM,CAACsB,IAAI,CAACH,OAAN,CAAN;AACAhB,IAAAA,iBAAiB,CAACmB,IAAI,CAACC,EAAN,CAAjB;AACAb,IAAAA,OAAO,CAAC;AACJQ,MAAAA,KAAK,EAAEI,IAAI,CAACJ,KADR;AAEJC,MAAAA,OAAO,EAAEG,IAAI,CAACH,OAFV;AAGJC,MAAAA,cAAc,EAAEE,IAAI,CAACC;AAHjB,KAAD,CAAP;AAKH,GAVD;;AAYA,QAAMC,MAAM,GAAG,MAAM;AACjB,QAAIf,IAAJ,EAAU;AACNV,MAAAA,WAAW;AACXG,MAAAA,SAAS;AACTG,MAAAA,oBAAoB;AACpBK,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GARD;;AAUA,QAAMY,QAAQ,GAAG7B,OAAO,CACpB,OAAO;AACHa,IAAAA,IADG;AAEHG,IAAAA,SAFG;AAGHS,IAAAA,KAHG;AAIHG,IAAAA,MAJG;AAKHT,IAAAA,aALG;AAMHC,IAAAA;AANG,GAAP,CADoB,EASpB,CAACP,IAAD,EAAOO,OAAP,CAToB,CAAxB;AAYA,sBACI,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAES,QAA5B;AAAA,cAAuCjB;AAAvC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA1DD;;AA4DA,eAAeD,kBAAf","sourcesContent":["import React, { useState, useEffect, createContext, useMemo } from \"react\";\r\nimport { setToken, getToken, removeToken } from \"../utils/localStorage\";\r\nimport { setPic, getPic, removePic } from \"../utils/localStorage\";\r\nimport {\r\n    setIdNutritionist,\r\n    getIdNutritionist,\r\n    removeIdNutritionist,\r\n} from \"../utils/localStorage\";\r\n\r\n//Context\r\nexport const AppContext = createContext(null);\r\n\r\n//Provider\r\nconst AppContextProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState(undefined);\r\n    const [flagLogin, setFlagLogin] = useState(false);\r\n    const [reloadUser, setReloadUser] = useState(false);\r\n    const [isReady, setIsReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const token = getToken();\r\n        const picture = getPic();\r\n        const idNutritionist = getIdNutritionist();\r\n        if (token) {\r\n            setAuth({ token, picture, idNutritionist });\r\n            setFlagLogin(true);\r\n        } else {\r\n            setAuth(null);\r\n            setFlagLogin(false);\r\n        }\r\n        setReloadUser(false);\r\n        setIsReady(true);\r\n    }, [reloadUser, isReady]);\r\n\r\n    const login = (user) => {\r\n        setFlagLogin(true);\r\n        setToken(user.token);\r\n        setPic(user.picture);\r\n        setIdNutritionist(user.id);\r\n        setAuth({\r\n            token: user.token,\r\n            picture: user.picture,\r\n            idNutritionist: user.id,\r\n        });\r\n    };\r\n\r\n    const logout = () => {\r\n        if (auth) {\r\n            removeToken();\r\n            removePic();\r\n            removeIdNutritionist();\r\n            setAuth(null);\r\n            setFlagLogin(false);\r\n        }\r\n    };\r\n\r\n    const authData = useMemo(\r\n        () => ({\r\n            auth,\r\n            flagLogin,\r\n            login,\r\n            logout,\r\n            setReloadUser,\r\n            isReady,\r\n        }),\r\n        [auth, isReady]\r\n    );\r\n\r\n    return (\r\n        <AppContext.Provider value={authData}>{children}</AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AppContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}