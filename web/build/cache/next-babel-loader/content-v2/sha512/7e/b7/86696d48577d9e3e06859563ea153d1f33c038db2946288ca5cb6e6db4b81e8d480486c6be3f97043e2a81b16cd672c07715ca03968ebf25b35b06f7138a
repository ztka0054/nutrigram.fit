{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport classnames from \"classnames\";\nimport useApp from \"../../../../../hooks/useApp\";\nimport TagLang from \"../../../../modules/GetTagLang\";\nimport SetLink from \"../../../../modules/SetLink\";\nimport request from \"../../../../../helper/core_services/core/requestService\";\nimport apiMedical from \"../../../../../helper/core_services/endpoints/medical_records\";\nimport patients from \"../../../../../helper/core_services/endpoints/patients\";\nimport subscription from \"../../../../../helper/core_services/endpoints/subscription\";\nimport Table from \"./Table\";\nexport default function Patients() {\n  const {\n    locale\n  } = useApp();\n  const {\n    0: flagAddPatient,\n    1: setFlagAddPatient\n  } = useState(true);\n  const {\n    0: countElement,\n    1: setCountElement\n  } = useState(0);\n  useEffect(() => {\n    ValidateMedicalSettings();\n    GetDataSubscription();\n  }, []);\n\n  const GetDataSubscription = async () => {\n    let reqSubscription = await request(subscription.get_subscription, null, null, {\n      locale\n    });\n    let reqPatients = await request(patients.get_patients, {\n      page_size: 1\n    }, null, {\n      locale\n    });\n\n    if (reqSubscription != null && reqPatients != null) {\n      var _reqSubscription$pric, _reqSubscription$pric2, _reqSubscription$pric3, _reqSubscription$pric4;\n\n      setCountElement((reqSubscription === null || reqSubscription === void 0 ? void 0 : (_reqSubscription$pric = reqSubscription.price) === null || _reqSubscription$pric === void 0 ? void 0 : (_reqSubscription$pric2 = _reqSubscription$pric.subscription) === null || _reqSubscription$pric2 === void 0 ? void 0 : _reqSubscription$pric2.patients) - reqPatients.page.count);\n\n      if ((reqSubscription === null || reqSubscription === void 0 ? void 0 : (_reqSubscription$pric3 = reqSubscription.price) === null || _reqSubscription$pric3 === void 0 ? void 0 : (_reqSubscription$pric4 = _reqSubscription$pric3.subscription) === null || _reqSubscription$pric4 === void 0 ? void 0 : _reqSubscription$pric4.patients) <= reqPatients.page.count) {\n        setFlagAddPatient(false);\n      }\n    }\n  };\n\n  const ValidateMedicalSettings = async () => {\n    let resultMedical = await request(apiMedical.get_settings_medical, null, null, null, false);\n\n    if (resultMedical == null) {\n      let resultMedical = await request(apiMedical.post_settings_medical, medicalFields);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"col-12\"\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"sty-bar-config\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: `text-notice ${classnames({\n          deactive: !flagAddPatient\n        })}`,\n        children: [flagAddPatient && /*#__PURE__*/_jsx(TagLang, {\n          group: \"validation\",\n          tag: \"available_patients\",\n          dynamic: [countElement]\n        }), !flagAddPatient && /*#__PURE__*/_jsx(TagLang, {\n          group: \"validation\",\n          tag: \"unavailable_patients\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"sty-cont-button\",\n        children: /*#__PURE__*/_jsx(SetLink, {\n          route: \"/dashboard/patients/configuration\",\n          children: /*#__PURE__*/_jsx(\"button\", {\n            children: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n              icon: faCog\n            })\n          })\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Table, {\n      flagAddPatient: flagAddPatient\n    })]\n  });\n}\nconst medicalFields = {\n  reason: true,\n  notes: true,\n  diarrhea: true,\n  constipation: true,\n  gastritis: true,\n  ulcer: true,\n  nausea: true,\n  pyrosis: true,\n  vomit: true,\n  colitis: true,\n  observations: true,\n  disease: true,\n  pastDisease: true,\n  laxative: true,\n  diuretic: true,\n  antacid: true,\n  analgesic: true,\n  surgeries: true,\n  obesity: true,\n  diabetes: true,\n  hypertension: true,\n  cancer: true,\n  thyroidProblems: true,\n  dyslipidemia: true,\n  heartDisease: true,\n  gastrointestinalDisease: true,\n  otherDiseases: true,\n  pregnancy: true,\n  gestationalAge: true,\n  lastMenstrualPeriod: true,\n  hormonalProblems: true,\n  hormonalTherapy: true,\n  contraceptives: true,\n  climacteric: true,\n  alcohol: true,\n  smoke: true,\n  coffee: true,\n  meals: true,\n  allergies: true,\n  restrictions: true,\n  water: true,\n  dislikes: true,\n  preferred: true,\n  dietNotes: true\n};","map":null,"metadata":{},"sourceType":"module"}