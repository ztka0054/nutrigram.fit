{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alex9\\\\Nutrigram_Web\\\\web\\\\contexts\\\\AppContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext, useMemo } from \"react\";\nimport { useRouter } from \"next/router\";\nimport i18n from \"../helper/i18n/config\";\nimport TagManager from \"react-gtm-module\";\nimport { getCurrency } from \"../utils/localStorage\"; // import enviroment from \"../helper/enviroment/config\";\n// const tagManagerArgs = {\n//     gtmId: enviroment.idGoogleTagManagger,\n// };\n//Context\n\nexport var AppContext = /*#__PURE__*/createContext(null); //Provider\n\nvar AppContextProvider = function AppContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale,\n      pathname = _useRouter.pathname;\n\n  var _useState = useState(null),\n      useLocale = _useState[0],\n      setUseLocale = _useState[1];\n\n  var _useState2 = useState(null),\n      queryLang = _useState2[0],\n      setQueryLang = _useState2[1];\n\n  var _useState3 = useState(null),\n      basePath = _useState3[0],\n      setBasePath = _useState3[1];\n\n  var _useState4 = useState(null),\n      objectsSignUp = _useState4[0],\n      setObjectsSignUp = _useState4[1];\n\n  var _useState5 = useState(false),\n      flagChangeElement = _useState5[0],\n      setFlagChangeElement = _useState5[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      setUseLocale(null);\n                      _context.next = 3;\n                      return i18n.changeLanguage(locale);\n\n                    case 3:\n                      setUseLocale(locale);\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))();\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [locale]); // const [loadTagManager, setLoadTagManager] = useState(false);\n  // useEffect(() => {\n  //     TagManager.initialize(tagManagerArgs);\n  //     setLoadTagManager(true);\n  // }, []);\n\n  var putQueryLang = function putQueryLang(data) {\n    setQueryLang(data);\n  };\n\n  var putBasePath = function putBasePath(data) {\n    setBasePath(data);\n  };\n\n  useEffect(function () {\n    setQueryLang({});\n    setBasePath(null);\n  }, [pathname]);\n\n  var putObjectSignUp = function putObjectSignUp(data) {\n    setObjectsSignUp(data);\n  };\n\n  var putFlagChangeElement = function putFlagChangeElement() {\n    setFlagChangeElement(!flagChangeElement);\n  };\n\n  var values = useMemo(function () {\n    return {\n      locale: useLocale,\n      queryLang: queryLang,\n      putQueryLang: putQueryLang,\n      basePath: basePath,\n      putBasePath: putBasePath,\n      // loadTagManager,\n      objectsSignUp: objectsSignUp,\n      putObjectSignUp: putObjectSignUp,\n      flagChangeElement: flagChangeElement,\n      putFlagChangeElement: putFlagChangeElement\n    };\n  }, [useLocale, queryLang, flagChangeElement]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(AppContextProvider, \"rrevO3y3awwYK7QQFXZuSI7Ntes=\", false, function () {\n  return [useRouter];\n});\n\n_c = AppContextProvider;\nexport default AppContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["C:/Users/alex9/Nutrigram_Web/web/contexts/AppContext.js"],"names":["React","useState","useEffect","createContext","useMemo","useRouter","i18n","TagManager","getCurrency","AppContext","AppContextProvider","children","locale","pathname","useLocale","setUseLocale","queryLang","setQueryLang","basePath","setBasePath","objectsSignUp","setObjectsSignUp","flagChangeElement","setFlagChangeElement","changeLanguage","putQueryLang","data","putBasePath","putObjectSignUp","putFlagChangeElement","values"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext, useMemo } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport i18n from \"../helper/i18n/config\";\r\nimport TagManager from \"react-gtm-module\";\r\n\r\nimport { getCurrency } from \"../utils/localStorage\";\r\n// import enviroment from \"../helper/enviroment/config\";\r\n// const tagManagerArgs = {\r\n//     gtmId: enviroment.idGoogleTagManagger,\r\n// };\r\n\r\n//Context\r\nexport const AppContext = createContext(null);\r\n\r\n//Provider\r\nconst AppContextProvider = ({ children }) => {\r\n    const { locale, pathname } = useRouter();\r\n    const [useLocale, setUseLocale] = useState(null);\r\n    const [queryLang, setQueryLang] = useState(null);\r\n    const [basePath, setBasePath] = useState(null);\r\n    const [objectsSignUp, setObjectsSignUp] = useState(null);\r\n    const [flagChangeElement, setFlagChangeElement] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        (async () => {\r\n            setUseLocale(null);\r\n            await i18n.changeLanguage(locale);\r\n            setUseLocale(locale);\r\n        })();\r\n    }, [locale]);\r\n\r\n    // const [loadTagManager, setLoadTagManager] = useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     TagManager.initialize(tagManagerArgs);\r\n    //     setLoadTagManager(true);\r\n    // }, []);\r\n\r\n    const putQueryLang = (data) => {\r\n        setQueryLang(data);\r\n    };\r\n\r\n    const putBasePath = (data) => {\r\n        setBasePath(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setQueryLang({});\r\n        setBasePath(null);\r\n    }, [pathname]);\r\n\r\n    const putObjectSignUp = (data) => {\r\n        setObjectsSignUp(data);\r\n    };\r\n\r\n    const putFlagChangeElement = () => {\r\n        setFlagChangeElement(!flagChangeElement);\r\n    };\r\n\r\n    const values = useMemo(\r\n        () => ({\r\n            locale: useLocale,\r\n            queryLang,\r\n            putQueryLang,\r\n            basePath,\r\n            putBasePath,\r\n            // loadTagManager,\r\n            objectsSignUp,\r\n            putObjectSignUp,\r\n            flagChangeElement,\r\n            putFlagChangeElement,\r\n        }),\r\n        [useLocale, queryLang, flagChangeElement]\r\n    );\r\n\r\n    return <AppContext.Provider value={values}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}