{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport useApp from \"../../../../../../../../hooks/useApp\";\nimport ModalDelete from \"../../../../../../../modules/Dashboard/Table/ModalDelete\";\nimport request from \"../../../../../../../../helper/core_services/core/requestService\";\nimport apiMenu from \"../../../../../../../../helper/core_services/endpoints/menu\";\nimport apiConsulation from \"../../../../../../../../helper/core_services/endpoints/consulation\";\nimport fixDate from \"../../../../../../../../helper/date/fixDateTimeService\";\nexport default function Rows(_ref) {\n  var row = _ref.row,\n      UpdateTable = _ref.UpdateTable,\n      customFunction = _ref.customFunction;\n  var router = useRouter();\n  var query = router.query,\n      locale = router.locale;\n\n  var _useState = useState(null),\n      dateElement = _useState[0],\n      setDateElement = _useState[1];\n\n  var _useState2 = useState(null),\n      nameMenu = _useState2[0],\n      setNameMenu = _useState2[1];\n\n  useEffect(function () {\n    setDateElement(fixDate(row.datetime).locale(locale).format(\"DD MMMM, YYYY\"));\n  }, [locale]);\n  useEffect(function () {\n    if (locale) GetMenu();\n  }, [row, locale]);\n\n  var GetMenu = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var reqConsulation, reqPatientMenu, resultMenu;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return request(apiConsulation.get_consulation, null, [query.id, row.id], {\n                locale: locale\n              });\n\n            case 2:\n              reqConsulation = _context.sent;\n\n              if (!(reqConsulation != null)) {\n                _context.next = 13;\n                break;\n              }\n\n              if (!(reqConsulation !== null && reqConsulation !== void 0 && reqConsulation.patientMenu)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 7;\n              return request(apiMenu.get_menu_patient, null, [reqConsulation.patientMenu], {\n                locale: locale\n              });\n\n            case 7:\n              reqPatientMenu = _context.sent;\n\n              if (!(reqPatientMenu != null)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 11;\n              return request(apiMenu.get_menu, null, [reqPatientMenu.menu], {\n                locale: locale\n              });\n\n            case 11:\n              resultMenu = _context.sent;\n\n              if (resultMenu != null) {\n                setNameMenu(resultMenu === null || resultMenu === void 0 ? void 0 : resultMenu.name);\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function GetMenu() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"tr\", {\n      onClick: function onClick() {\n        return customFunction(row.id);\n      },\n      children: [/*#__PURE__*/_jsx(\"td\", {\n        children: dateElement\n      }), /*#__PURE__*/_jsx(\"td\", {\n        children: nameMenu\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}