{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport { map } from \"lodash\";\nimport moment from \"moment\";\nimport useApp from \"../../../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../../../modules/GetTagLang\";\nimport request from \"../../../../../../../../helper/core_services/core/requestService\";\nimport menu from \"../../../../../../../../helper/core_services/endpoints/menu\";\nimport { message_1 } from \"../../../../../../../../helper/appearance/messages\";\nimport { loadElement } from \"../../../../../../../../helper/appearance/load\";\nimport GetLanguages from \"../../../../../../../../helper/i18n/getValueTagLang\";\nexport default function FoodPlan({\n  ShowMenu,\n  menuPatient\n}) {\n  const {\n    locale\n  } = useApp();\n  const {\n    0: elementMenu,\n    1: setElementMenu\n  } = useState(null);\n  useEffect(() => {\n    GetDataMenu();\n  }, [menuPatient]);\n\n  const GetDataMenu = async () => {\n    let menuReq = null;\n    let dataReq = null;\n\n    if (menuPatient != null) {\n      menuReq = await request(menu.get_menu_patient, null, [menuPatient], {\n        locale\n      });\n      dataReq = await request(menu.get_menu, null, [menuReq.menu], {\n        locale\n      });\n    }\n\n    DrawMenu(menuReq, dataReq);\n  };\n\n  const DrawMenu = async (menuReq, dataReq) => {\n    let element = null;\n\n    if (menuPatient != null) {\n      let schedules = map(menuReq.schedules, (element, index) => {\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"row sty-schedule\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"col-4 sty-title\",\n              children: element.type.name\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-4 sty-time\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"from_\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-value\",\n                children: moment(`${moment().format(\"YYYY-MM-DD\")}T${element.fromTime}`).format(\"HH:mm:ss\")\n              })]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-4 sty-time\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"to_\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-value\",\n                children: moment(`${moment().format(\"YYYY-MM-DD\")}T${element.toTime}`).format(\"HH:mm:ss\")\n              })]\n            })]\n          })\n        }, `schedule_${index}`);\n      });\n      element = /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-tag-patient-1\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-title\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"menu_\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-value\",\n            children: dataReq.name\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"row sty-cont-patient-schedule\",\n          children: schedules\n        })]\n      });\n    } else {\n      element = /*#__PURE__*/_jsx(\"div\", {\n        className: \"sty-empty-mesage-1 text-center\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"validation\",\n          tag: \"without_assigned_plan\"\n        })\n      });\n    }\n\n    setElementMenu(element);\n  };\n\n  const SendMenu = async () => {\n    loadElement(true);\n    let resultSendMenu = await request(menu.get_send_menu, null, [menuPatient], {\n      locale\n    });\n    loadElement(false);\n\n    if (resultSendMenu != null) {\n      message_1(GetLanguages(\"validation\", \"menu_sent\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"sty-input-tag-g-1\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"dashboard\",\n          tag: \"tit_pacient_2_7\"\n        })\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-8\",\n          children: elementMenu\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-4 align-self-end text-right\",\n          children: [menuPatient && /*#__PURE__*/_jsx(\"button\", {\n            className: \"sty-button-dash-1 sty-button-right\",\n            onClick: () => SendMenu(),\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"send\"\n            })\n          }), /*#__PURE__*/_jsxs(\"button\", {\n            className: \"sty-button-dash-1\",\n            onClick: () => ShowMenu(),\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"sty-icon\",\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: \"/static/img/favicons/app/add_w.svg\"\n              })\n            }), /*#__PURE__*/_jsx(TagLang, {\n              group: \"button\",\n              tag: \"edit\"\n            })]\n          })]\n        })]\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}