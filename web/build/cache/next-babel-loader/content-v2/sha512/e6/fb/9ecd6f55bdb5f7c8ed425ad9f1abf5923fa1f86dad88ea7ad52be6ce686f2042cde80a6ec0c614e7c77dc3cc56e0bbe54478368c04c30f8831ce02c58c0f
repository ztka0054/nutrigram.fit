{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\nimport * as Yup from \"yup\";\nimport { map } from \"lodash\";\nimport useApp from \"../../../../../hooks/useApp\";\nimport TagLang from \"../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../modules/Forms/MessageValidation\";\nimport request from \"../../../../../helper/core_services/core/requestService\";\nimport menu from \"../../../../../helper/core_services/endpoints/menu\";\nimport { sortByAttr } from \"../../../../../helper/array/sort\";\nimport SubMealsCont from \"../Forms/SubMealsCont\";\nexport default function FormMenu({\n  idElement\n}) {\n  const router = useRouter();\n  const {\n    locale\n  } = useApp();\n  const {\n    0: elementsMeals,\n    1: setElementsMeals\n  } = useState(null);\n  const formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData, {\n      resetForm\n    }) => {\n      if (!(formData !== null && formData !== void 0 && formData.id)) SaveMenu(formData);else UpdateMenu(formData); // SendForm(formData, resetForm);\n    }\n  });\n  useEffect(() => {\n    GetMeals();\n  }, [idElement]);\n  useEffect(() => {\n    if (idElement && elementsMeals) GetData();\n  }, [elementsMeals]);\n\n  const GetData = async () => {\n    let req = await request(menu.get_menu, null, [idElement], {\n      locale\n    });\n    if (req != null) DrawGetData(req);\n  };\n\n  const DrawGetData = info => {\n    let mealTypes = map(elementsMeals, element => {\n      let find = info.mealTypeMenus.find(obj => {\n        return obj.mealType.id === element.mealType;\n      });\n      if (find != undefined) return {\n        mealType: find.mealType.id,\n        name: find.mealType.name,\n        monday: find.monday,\n        tuesday: find.tuesday,\n        tuesday: find.tuesday,\n        wednesday: find.wednesday,\n        thursday: find.thursday,\n        friday: find.friday,\n        saturday: find.saturday,\n        sunday: find.sunday\n      };else return _objectSpread({}, element);\n    });\n    let values = {\n      id: info.id,\n      name: info.name,\n      mealTypes\n    };\n    formik.setValues(values);\n  };\n\n  const GetMeals = async () => {\n    let req = await request(menu.get_meals_type, null, null, {\n      locale\n    });\n    if (req != null) DrawMeals(req);\n  };\n\n  const DrawMeals = info => {\n    sortByAttr();\n    info = info.sortBy(\"order\");\n    let mealTypes = map(info, (element, index) => {\n      return {\n        mealType: element.id,\n        name: element.name,\n        monday: null,\n        tuesday: null,\n        tuesday: null,\n        wednesday: null,\n        thursday: null,\n        friday: null,\n        saturday: null,\n        sunday: null\n      }; // arrayHelpers.push({ mealType: element.id, ...element, ...week });\n    });\n    let values = {\n      name: \"\",\n      mealTypes\n    };\n    formik.setValues(values);\n    setElementsMeals(mealTypes);\n  };\n\n  const SaveMenu = async formData => {\n    let req = await request(menu.post_new_menu, formData, null, {\n      locale\n    });\n    if (req != null) router.push(\"/dashboard/menus\");\n  };\n\n  const UpdateMenu = async formData => {\n    let req = await request(menu.put_edit_menu, formData, [formData.id], {\n      locale\n    });\n    if (req != null) router.push(\"/dashboard/menus\");\n  };\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"name\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              name: `name`,\n              value: formik.values.name,\n              onChange: formik.handleChange,\n              type: \"text\"\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.name\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsx(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsx(FieldArray, {\n          name: \"mealTypes\",\n          render: arrayHelpers => /*#__PURE__*/_jsx(SubMealsCont, {\n            formik: formik,\n            arrayHelpers: arrayHelpers,\n            father: \"mealTypes\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12 text-center sty-magin-b-1\",\n        children: /*#__PURE__*/_jsxs(\"button\", {\n          className: \"sty-button-dash-1\",\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-icon\",\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: \"/static/img/favicons/app/save_w.svg\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"button\",\n              tag: \"save\"\n            })\n          })]\n        })\n      })]\n    })\n  });\n}\n\nfunction initialValues() {\n  return {\n    name: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    name: Yup.string().required(\"required\")\n  };\n}","map":null,"metadata":{},"sourceType":"module"}