{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TagLang from \"../../../../../../modules/GetTagLang\";\nimport utcFormat from \"../../../../../../../helper/date/utcFormat\";\nimport { getHourDateTime, addTimeToDateTime } from \"../../../../../../../helper/date/getTimeZoneData\";\nimport request from \"../../../../../../../helper/core_services/core/requestService\";\nimport ApiAppoinments from \"../../../../../../../helper/core_services/endpoints/appointments\";\nimport style from \"./formNew.module.scss\";\nconst pic = \"/static/img/favicons/app/human.png\";\nexport default function ChangeAppoinment({\n  dateSelect,\n  setStateModal,\n  setActiveRefresh,\n  selectAppoiment,\n  activeRefreshList,\n  setActiveRefreshList\n}) {\n  var _selectAppoiment$pati, _selectAppoiment$pati2, _selectAppoiment$pati3, _formik$errors;\n\n  const router = useRouter();\n  useEffect(() => {\n    if (dateSelect) formik.setFieldValue(\"date\", utcFormat(dateSelect));else formik.setFieldValue(\"date\", \"\");\n  }, [dateSelect]);\n  const formik = useFormik({\n    validateOnChange: false,\n    validateOnBlur: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData, {\n      resetForm\n    }) => {\n      ChangeElement(formData);\n    }\n  });\n\n  const ChangeElement = async formData => {\n    let params = {\n      state: formData.state\n    };\n\n    if ((formData === null || formData === void 0 ? void 0 : formData.state) == 2) {\n      params.datetime = selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.suggestedDatetime;\n    }\n\n    let result = await request(ApiAppoinments.patch_edit_appointment, params, [selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.id], {\n      locale: router.locale\n    });\n\n    if (result) {\n      setStateModal(false);\n      setActiveRefresh(true);\n      setActiveRefreshList(!activeRefreshList);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: style.contUser,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.contPicture,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: style.picture,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: selectAppoiment !== null && selectAppoiment !== void 0 && (_selectAppoiment$pati = selectAppoiment.patient) !== null && _selectAppoiment$pati !== void 0 && _selectAppoiment$pati.picture ? selectAppoiment.patient.picture : pic\n          })\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.nameUser,\n        children: [!(selectAppoiment !== null && selectAppoiment !== void 0 && selectAppoiment.patient) && /*#__PURE__*/_jsx(\"div\", {\n          className: style.unselectUser,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"new_none_patient\"\n          })\n        }), (selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.patient) && /*#__PURE__*/_jsx(\"div\", {\n          children: `${selectAppoiment === null || selectAppoiment === void 0 ? void 0 : (_selectAppoiment$pati2 = selectAppoiment.patient) === null || _selectAppoiment$pati2 === void 0 ? void 0 : _selectAppoiment$pati2.firstName} ${selectAppoiment === null || selectAppoiment === void 0 ? void 0 : (_selectAppoiment$pati3 = selectAppoiment.patient) === null || _selectAppoiment$pati3 === void 0 ? void 0 : _selectAppoiment$pati3.lastName}`\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.conDataChange,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: style.dataInfo,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: `${style.titleSection} ${style.color1}`,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"title_1_change_quote\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.contDataInfo,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: `${style.element} ${style.date}`,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"date\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: moment(utcFormat(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.datetime)).locale(router.locale).format(\"dddd, MMMM DD\")\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.element,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"from_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: getHourDateTime(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.datetime)\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.element,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"to_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: addTimeToDateTime(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.datetime, selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.duration)\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: style.lineChange\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.dataInfo,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: `${style.titleSection} ${style.color2}`,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"title_2_change_quote\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: style.contDataInfo,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: `${style.element} ${style.date}`,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"date\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: moment(utcFormat(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.suggestedDatetime)).locale(router.locale).format(\"dddd, MMMM DD\")\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.element,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"from_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: getHourDateTime(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.suggestedDatetime)\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: style.element,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: style.title,\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"to_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: style.data,\n              children: addTimeToDateTime(selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.suggestedDatetime, selectAppoiment === null || selectAppoiment === void 0 ? void 0 : selectAppoiment.duration)\n            })]\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: style === null || style === void 0 ? void 0 : style.error,\n      children: formik === null || formik === void 0 ? void 0 : (_formik$errors = formik.errors) === null || _formik$errors === void 0 ? void 0 : _formik$errors.patient\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.contButtons,\n      children: [/*#__PURE__*/_jsx(\"button\", {\n        className: style.buttonCancel,\n        onClick: () => formik.setFieldValue(\"state\", 3),\n        type: \"submit\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"button\",\n          tag: \"cancel_appoiment\"\n        })\n      }), /*#__PURE__*/_jsx(\"button\", {\n        className: style.buttonAccept,\n        onClick: () => formik.setFieldValue(\"state\", 2),\n        type: \"submit\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"button\",\n          tag: \"accept_appoiment\"\n        })\n      })]\n    })]\n  });\n}\n\nfunction initialValues() {\n  return {\n    state: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    state: Yup.string().required(\"required\")\n  };\n}","map":null,"metadata":{},"sourceType":"module"}