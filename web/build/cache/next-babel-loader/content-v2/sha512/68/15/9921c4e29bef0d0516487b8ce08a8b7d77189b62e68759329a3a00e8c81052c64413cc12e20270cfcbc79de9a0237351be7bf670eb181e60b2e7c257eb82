{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport useApp from \"../../../../hooks/useApp\";\nimport useAuth from \"../../../../hooks/useAuth\";\nimport SetLink from \"../../../modules/SetLink\";\nimport TagLang from \"../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../modules/Forms/MessageValidation\";\nimport GetLanguage from \"../../../../helper/i18n/getValueTagLang\";\nimport request from \"../../../../helper/core_services/core/requestService\";\nimport nutri from \"../../../../helper/core_services/endpoints/nutritionist\";\nimport subscription from \"../../../../helper/core_services/endpoints/subscription\";\nexport default function FormLogin() {\n  const router = useRouter();\n  const {\n    locale\n  } = useApp();\n  const {\n    login\n  } = useAuth();\n  const formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData, {\n      resetForm\n    }) => {\n      SendForm(formData, resetForm);\n    }\n  });\n\n  const SendForm = async (formData, resetForm) => {\n    let responseLogin = await request(nutri.post_login, formData, null, {\n      locale\n    });\n\n    if (responseLogin != null) {\n      login(responseLogin);\n      resetForm(initialValues()); // router.push(\"/dashboard/patients\");\n\n      GetPlan();\n    }\n  };\n\n  const GetPlan = async () => {\n    let responseSubscription = await request(subscription.get_subscription, null, null, {\n      locale\n    }, false);\n\n    if (responseSubscription != null) {\n      router.push(\"/dashboard/patients\");\n    } else {\n      router.push(\"/signup_step_4\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"sty-title-1\",\n      children: /*#__PURE__*/_jsx(TagLang, {\n        group: \"login\",\n        tag: \"title_1\"\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"sty-cont-input-1\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"sty-input-1\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          name: `email`,\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          type: \"text\",\n          placeholder: GetLanguage(\"input\", \"email\")\n        }), /*#__PURE__*/_jsx(MessageValidation, {\n          error: formik.errors.email\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"sty-cont-input-1\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"sty-input-1\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          name: `password`,\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          type: \"password\",\n          placeholder: GetLanguage(\"input\", \"password\")\n        }), /*#__PURE__*/_jsx(MessageValidation, {\n          error: formik.errors.password\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsx(\"button\", {\n        className: \"sty-button-sec-1\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"button\",\n          tag: \"tag_t_1_4\"\n        })\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"sty-cont-link-1\",\n      children: /*#__PURE__*/_jsx(SetLink, {\n        route: \"/recovery\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-link-1 link text-right\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"login\",\n            tag: \"sub_1\"\n          })\n        })\n      })\n    })]\n  });\n}\n\nfunction initialValues() {\n  return {\n    email: \"\",\n    password: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    email: Yup.string().email().required(\"required\"),\n    password: Yup.string().required(\"required\")\n  };\n}","map":null,"metadata":{},"sourceType":"module"}