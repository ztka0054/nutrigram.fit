{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\nimport * as Yup from \"yup\";\nimport useApp from \"../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../../modules/Forms/MessageValidation\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport workouts from \"../../../../../../helper/core_services/endpoints/workouts\";\nimport GetLanguage from \"../../../../../../helper/i18n/getValueTagLang\";\nimport { loadElement } from \"../../../../../../helper/appearance/load\";\nimport FieldSelect from \"../../../../../../helper/forms/elements/select\";\nexport default function FormActivity(_ref) {\n  var idPatient = _ref.idPatient,\n      setFormPhysical = _ref.setFormPhysical,\n      setFlagSendPhysical = _ref.setFlagSendPhysical;\n\n  var _useApp = useApp(),\n      locale = _useApp.locale;\n\n  var _useState = useState([]),\n      catType = _useState[0],\n      setCatType = _useState[1];\n\n  var _useState2 = useState([]),\n      catClasification = _useState2[0],\n      setcatClasification = _useState2[1];\n\n  var _useState3 = useState([{\n    id: 1,\n    name: \"AM\"\n  }, {\n    id: 2,\n    name: \"PM\"\n  }]),\n      catSchedule = _useState3[0],\n      setCatSchedule = _useState3[1];\n\n  var formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, _ref2) {\n        var resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm;\n                if (!(formData !== null && formData !== void 0 && formData.id)) SendForm(formData, resetForm);\n                if (formData !== null && formData !== void 0 && formData.id) UpdateForm(formData);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect(function () {\n    setFormPhysical(formik);\n  }, []);\n  useEffect(function () {\n    if (idPatient != null) getInformation();\n  }, [idPatient]);\n  useEffect(function () {\n    setCatType([{\n      id: 1,\n      name: GetLanguage(\"input\", \"strength\")\n    }, {\n      id: 2,\n      name: GetLanguage(\"input\", \"cardio\")\n    }]);\n  }, [locale]);\n  useEffect(function () {\n    setcatClasification([{\n      id: 1,\n      name: GetLanguage(\"input\", \"sedentary\")\n    }, {\n      id: 2,\n      name: GetLanguage(\"input\", \"light\")\n    }, {\n      id: 3,\n      name: GetLanguage(\"input\", \"moderate\")\n    }, {\n      id: 4,\n      name: GetLanguage(\"input\", \"intense\")\n    }]);\n  }, [locale]);\n\n  var getInformation = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var req;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return request(workouts.get_configuration, null, [idPatient], locale);\n\n            case 2:\n              req = _context2.sent;\n\n              if (req != null) {\n                formik.setValues(req);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getInformation() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var SendForm = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(formData) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return SaveWorkOut(formData);\n\n            case 2:\n              setFlagSendPhysical(true);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SendForm(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var UpdateForm = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(formData) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return UpdateWorkOut(formData);\n\n            case 2:\n              setFlagSendPhysical(true);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function UpdateForm(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var SaveWorkOut = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(formData) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              loadElement(true);\n              _context5.next = 3;\n              return request(workouts.post_create_configuration, formData, [formData.idUser], {\n                locale: locale\n              });\n\n            case 3:\n              loadElement(false);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function SaveWorkOut(_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var UpdateWorkOut = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(formData) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              loadElement(true);\n              _context6.next = 3;\n              return request(workouts.patch_update_configuration, formData, [formData.idUser], {\n                locale: locale\n              });\n\n            case 3:\n              loadElement(false);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function UpdateWorkOut(_x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"day_physical\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  name: \"days\",\n                  value: formik.values.days,\n                  onChange: formik.handleChange,\n                  type: \"number\",\n                  max: \"7\"\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.days\n                })]\n              })]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"minutes_physical\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  name: \"minutes\",\n                  value: formik.values.minutes,\n                  onChange: formik.handleChange,\n                  type: \"number\"\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.minutes\n                })]\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"training_type\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(FieldSelect, {\n                  formik: formik,\n                  name: \"type\",\n                  elements: catType\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.type\n                })]\n              })]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"schedule_physical\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(FieldSelect, {\n                  formik: formik,\n                  name: \"schedule\",\n                  elements: catSchedule\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.schedule\n                })]\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"clasification_pyshical\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(FieldSelect, {\n                  formik: formik,\n                  name: \"classification\",\n                  elements: catClasification\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.classification\n                })]\n              })]\n            })\n          })\n        })]\n      })\n    })\n  });\n}\n\nfunction initialValues() {\n  return {\n    days: 0,\n    type: \"\",\n    minutes: 0,\n    schedule: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    days: Yup.string().required(\"required\"),\n    type: Yup.string().required(\"required\"),\n    minutes: Yup.string().required(\"required\"),\n    schedule: Yup.string().required(\"required\")\n  };\n}","map":null,"metadata":{},"sourceType":"module"}