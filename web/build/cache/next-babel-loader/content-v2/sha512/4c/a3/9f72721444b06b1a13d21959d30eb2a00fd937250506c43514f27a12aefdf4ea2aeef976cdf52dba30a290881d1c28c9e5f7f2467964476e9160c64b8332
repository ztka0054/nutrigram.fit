{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, createContext, useMemo } from \"react\";\nimport { setToken, getToken, removeToken } from \"../utils/localStorage\";\nimport { setPic, getPic, removePic } from \"../utils/localStorage\";\nimport { setIdNutritionist, getIdNutritionist, removeIdNutritionist } from \"../utils/localStorage\"; //Context\n\nexport var AppContext = /*#__PURE__*/createContext(null); //Provider\n\nvar AppContextProvider = function AppContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(undefined),\n      auth = _useState[0],\n      setAuth = _useState[1];\n\n  var _useState2 = useState(false),\n      flagLogin = _useState2[0],\n      setFlagLogin = _useState2[1];\n\n  var _useState3 = useState(false),\n      reloadUser = _useState3[0],\n      setReloadUser = _useState3[1];\n\n  var _useState4 = useState(false),\n      isReady = _useState4[0],\n      setIsReady = _useState4[1];\n\n  useEffect(function () {\n    var token = getToken();\n    var picture = getPic();\n    var idNutritionist = getIdNutritionist();\n\n    if (token) {\n      setAuth({\n        token: token,\n        picture: picture,\n        idNutritionist: idNutritionist\n      });\n      setFlagLogin(true);\n    } else {\n      setAuth(null);\n      setFlagLogin(false);\n    }\n\n    setReloadUser(false);\n    setIsReady(true);\n  }, [reloadUser, isReady]);\n\n  var login = function login(user) {\n    setFlagLogin(true);\n    setToken(user.token);\n    setPic(user.picture);\n    setIdNutritionist(user.id);\n    setAuth({\n      token: user.token,\n      picture: user.picture,\n      idNutritionist: user.id\n    });\n  };\n\n  var logout = function logout() {\n    if (auth) {\n      removeToken();\n      removePic();\n      removeIdNutritionist();\n      setAuth(null);\n      setFlagLogin(false);\n    }\n  };\n\n  var authData = useMemo(function () {\n    return {\n      auth: auth,\n      flagLogin: flagLogin,\n      login: login,\n      logout: logout,\n      setReloadUser: setReloadUser,\n      isReady: isReady\n    };\n  }, [auth, isReady]);\n  return /*#__PURE__*/_jsx(AppContext.Provider, {\n    value: authData,\n    children: children\n  });\n};\n\nexport default AppContextProvider;","map":null,"metadata":{},"sourceType":"module"}