{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { isEmpty } from \"lodash\";\nimport moment from \"moment\";\nimport Information from \"./Information\";\nimport Sections from \"./Sections\";\nimport request from \"../../../../../helper/core_services/core/requestService\";\nimport patient from \"../../../../../helper/core_services/endpoints/patients\";\nexport default function Detail() {\n  var _useRouter;\n\n  var query = (_useRouter = useRouter()) === null || _useRouter === void 0 ? void 0 : _useRouter.query;\n\n  var _useRouter2 = useRouter(),\n      locale = _useRouter2.locale;\n\n  var _useState = useState(null),\n      dataPatient = _useState[0],\n      setDataPatient = _useState[1];\n\n  var _useState2 = useState(false),\n      refreshPatient = _useState2[0],\n      setRefreshPatient = _useState2[1];\n\n  useEffect(function () {\n    if (query) if (!isEmpty(query)) GetDataPatient();\n  }, [query, locale]);\n  useEffect(function () {\n    if (refreshPatient) {\n      GetDataPatient();\n      setRefreshPatient(false);\n    }\n  }, [refreshPatient]);\n\n  var GetDataPatient = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var req;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return request(patient.get_patient, null, [query.id], {\n                locale: locale\n              });\n\n            case 2:\n              req = _context.sent;\n              if (req != null) setDataPatient(_objectSpread(_objectSpread({}, req), {}, {\n                age: moment().diff(moment(req.birthday), \"years\")\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function GetDataPatient() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Information, {\n      dataPatient: dataPatient\n    }), /*#__PURE__*/_jsx(Sections, {\n      dataPatient: dataPatient,\n      setRefreshPatient: setRefreshPatient\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}