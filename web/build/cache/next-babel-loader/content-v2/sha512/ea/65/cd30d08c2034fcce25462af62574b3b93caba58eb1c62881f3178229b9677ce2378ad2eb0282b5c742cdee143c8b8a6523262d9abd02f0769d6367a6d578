{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport useApp from \"../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../../modules/Forms/MessageValidation\";\nimport GetLanguages from \"../../../../../../helper/i18n/getValueTagLang\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport apiMedicalRecords from \"../../../../../../helper/core_services/endpoints/medical_records\";\nimport { loadElement } from \"../../../../../../helper/appearance/load\";\nimport FieldRadio from \"../../../../../../helper/forms/elements/radio\";\nexport default function FormGinecology({\n  idPatient = null,\n  setFormGinecology,\n  setFlagSendGinecology\n}) {\n  const {\n    locale\n  } = useApp();\n  const {\n    0: flagsFields,\n    1: setFlagsFields\n  } = useState({});\n  const {\n    0: valuesPregnacy,\n    1: setValuesPregnacy\n  } = useState([]);\n  const formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData, {\n      resetForm\n    }) => {\n      if (!(formData !== null && formData !== void 0 && formData.id)) SendForm(formData, resetForm);\n      if (formData !== null && formData !== void 0 && formData.id) UpdateForm(formData);\n    }\n  });\n  useEffect(() => {\n    setFormGinecology(formik);\n  }, []);\n  useEffect(() => {\n    if (idPatient != null) getInformation();\n  }, [idPatient]);\n  useEffect(() => {\n    setValuesPregnacy([{\n      tag: GetLanguages(\"input\", \"no\"),\n      value: false\n    }, {\n      tag: GetLanguages(\"input\", \"yes\"),\n      value: true\n    }]);\n  }, [locale]);\n  useEffect(() => {\n    GetFlagsActive();\n  }, []);\n\n  const getInformation = async () => {\n    let reqGyne = await request(apiMedicalRecords.get_gyneco, null, [idPatient], {\n      locale\n    }, false);\n\n    if (reqGyne != null) {\n      formik.setValues(reqGyne);\n    }\n  };\n\n  const GetFlagsActive = async () => {\n    let req = await request(apiMedicalRecords.get_settings_medical, null, null, {\n      locale\n    }, false);\n\n    if (req != null) {\n      setFlagsFields(req);\n    }\n  };\n\n  const SendForm = async formData => {\n    loadElement(true);\n    await request(apiMedicalRecords.post_new_gyneco, formData, [formData.idUser], {\n      locale\n    });\n    loadElement(false);\n    setFlagSendGinecology(true);\n  };\n\n  const UpdateForm = async formData => {\n    loadElement(true);\n    await request(apiMedicalRecords.patch_gyneco, formData, [idPatient], {\n      locale\n    });\n    loadElement(false);\n    setFlagSendGinecology(true);\n  };\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.pregnancy) && /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-input-tag-g-1\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"pregnant\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsx(FieldRadio, {\n              formik: formik,\n              name: \"pregnancy\",\n              values: valuesPregnacy\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.gestationalAge) && formik.values[\"pregnancy\"] == \"1\" && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"gestation_time\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: `gestationalAge`,\n                  value: formik.values.gestationalAge,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.gestationalAge\n                })]\n              })]\n            })\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.lastMenstrualPeriod) && formik.values[\"pregnancy\"] == \"1\" && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"last_menstruation\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: `lastMenstrualPeriod`,\n                  value: formik.values.lastMenstrualPeriod,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.lastMenstrualPeriod\n                })]\n              })]\n            })\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.hormonalProblems) && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"hormonal_problems\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: `hormonalProblems`,\n                  value: formik.values.hormonalProblems,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.hormonalProblems\n                })]\n              })]\n            })\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.hormonalTherapy) && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"hormonal_therapy\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: `hormonalTherapy`,\n                  value: formik.values.hormonalTherapy,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.hormonalTherapy\n                })]\n              })]\n            })\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.contraceptives) && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"contraceptives_1\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: `contraceptives`,\n                  value: formik.values.contraceptives,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.contraceptives\n                })]\n              })]\n            })\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.climacteric) && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"climacteric\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: `climacteric`,\n                  value: formik.values.climacteric,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.climacteric\n                })]\n              })]\n            })\n          })]\n        })\n      })]\n    })\n  });\n}\n\nfunction initialValues() {\n  return {\n    pregnancy: false,\n    gestationalAge: \"\",\n    lastMenstrualPeriod: \"\",\n    hormonalProblems: \"\",\n    hormonalTherapy: \"\",\n    contraceptives: \"\",\n    climacteric: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {};\n}","map":null,"metadata":{},"sourceType":"module"}