{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { Collapse, CardBody, Card } from \"reactstrap\";\nimport { map, size } from \"lodash\";\nimport useApp from \"../../../../../hooks/useApp\";\nimport TagLang from \"../../../../modules/GetTagLang\";\nimport GetLanguage from \"../../../../../helper/i18n/getValueTagLang\";\nimport request from \"../../../../../helper/core_services/core/requestService\";\nimport recipe from \"../../../../../helper/core_services/endpoints/recipes\";\nimport TablePag from \"../../../../modules/Dashboard/Table/TablePagination\";\nimport Rows from \"./SubEquivalentRow\";\nimport SubEquivalentFields from \"./SubEquivalentFields\";\nexport default function SubEquivalentColapse(_ref) {\n  var formik = _ref.formik,\n      arrayHelpers = _ref.arrayHelpers,\n      father = _ref.father,\n      content = _ref.content,\n      index = _ref.index;\n\n  var _useApp = useApp(),\n      locale = _useApp.locale;\n\n  var _useState = useState(true),\n      flagCollapse = _useState[0],\n      setflagCollapse = _useState[1];\n\n  var valuesElement = formik.values[father][index];\n  useEffect(function () {\n    if (valuesElement !== null && valuesElement !== void 0 && valuesElement.recipe) PutDataRecipe(valuesElement.recipe);\n  }, [valuesElement === null || valuesElement === void 0 ? void 0 : valuesElement.recipe]);\n\n  var SelectEquivalent = function SelectEquivalent(row) {\n    PutDataRecipe(row);\n  };\n\n  var PutDataRecipe = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(row) {\n      var _row$images, _row$images$;\n\n      var req;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setflagCollapse(false);\n              formik.setFieldValue(\"\".concat(father, \"[\").concat(index, \"].equivalent\"), row.id);\n              formik.setFieldValue(\"\".concat(father, \"[\").concat(index, \"].name\"), row.name);\n              formik.setFieldValue(\"\".concat(father, \"[\").concat(index, \"].image\"), (_row$images = row.images) === null || _row$images === void 0 ? void 0 : (_row$images$ = _row$images[0]) === null || _row$images$ === void 0 ? void 0 : _row$images$.image);\n              _context.next = 6;\n              return request(recipe.get_recipe, null, [row.id], {\n                locale: locale\n              });\n\n            case 6:\n              req = _context.sent;\n              if (req != null) formik.setFieldValue(\"\".concat(father, \"[\").concat(index, \"].ingredients\"), req.ingredients);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function PutDataRecipe(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!flagCollapse && /*#__PURE__*/_jsx(SubEquivalentFields, {\n      formik: formik,\n      arrayHelpers: arrayHelpers,\n      father: father,\n      content: content,\n      index: index\n    }), /*#__PURE__*/_jsx(Collapse, {\n      isOpen: flagCollapse,\n      className: \"sty-data-content\",\n      children: /*#__PURE__*/_jsx(Card, {\n        children: /*#__PURE__*/_jsx(CardBody, {\n          children: /*#__PURE__*/_jsx(TablePag, {\n            titles: [/*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"name\"\n            }), /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"difficulty\"\n            })],\n            titleTable: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"recipes_u\"\n            }),\n            tagCount: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"recipes\"\n            }),\n            pageSize: 10,\n            endpoint: recipe.get_recipes,\n            Rows: Rows,\n            customFunction: SelectEquivalent\n          })\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}