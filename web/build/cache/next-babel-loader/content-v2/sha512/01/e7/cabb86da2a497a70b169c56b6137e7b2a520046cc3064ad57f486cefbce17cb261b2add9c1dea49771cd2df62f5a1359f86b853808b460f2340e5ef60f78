{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { map, size } from \"lodash\";\nimport IconPlus from \"../../../../../components/Icons/Plus\";\nimport IconClose from \"../../../../../components/Icons/Close\";\nimport IconEdit from \"../../../../../components/Icons/Edit\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport { days } from \"../../../../../../components/catalogs/quotes\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport ApiAppoinments from \"../../../../../../helper/core_services/endpoints/appointments\";\nimport Modal from \"./ModalNew\";\nimport ModalDelete from \"./ModalDelete\";\nimport style from \"../Schedule.module.scss\";\nexport default function Availaility() {\n  const router = useRouter();\n  const {\n    0: activeNew,\n    1: setActiveNew\n  } = useState(false);\n  const {\n    0: activeDelete,\n    1: setActiveDelete\n  } = useState(false);\n  const {\n    0: avalivilities,\n    1: setAvalivilities\n  } = useState([]);\n  const {\n    0: availailityObject,\n    1: setAvailailityObject\n  } = useState(null);\n  const {\n    0: refresh,\n    1: setRefresh\n  } = useState(true);\n  useEffect(() => {\n    if (!router.isReady) return;\n    let ignore = false;\n\n    async function requestAvailavility() {\n      let result = await request(ApiAppoinments.get_availabilities, null, null, {\n        local: router.locale\n      });\n\n      if (result) {\n        setAvalivilities(result.result);\n      }\n    }\n\n    if (refresh) {\n      requestAvailavility();\n      setRefresh(false);\n    }\n\n    return () => {\n      ignore = true;\n    };\n  }, [router, refresh]);\n  useEffect(() => {\n    if (activeNew) setActiveNew(false);\n  }, [activeNew]);\n  useEffect(() => {\n    if (activeDelete) setActiveDelete(false);\n  }, [activeDelete]);\n\n  const ClickNewElement = () => {\n    setActiveNew(true);\n    setAvailailityObject(null);\n  };\n\n  const ClickEditElement = availaility => {\n    setActiveNew(true);\n    setAvailailityObject(availaility);\n  };\n\n  const DeleteElement = availaility => {\n    setActiveDelete(true);\n    setAvailailityObject(availaility);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Modal, {\n      active: activeNew,\n      setRefresh: setRefresh,\n      availailityObject: availailityObject\n    }), /*#__PURE__*/_jsx(ModalDelete, {\n      active: activeDelete,\n      availailityObject: availailityObject,\n      setRefresh: setRefresh\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.header,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.titleSection,\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"input\",\n          tag: \"title_config_1_quotes\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: style.buttonAdd,\n        onClick: () => ClickNewElement(),\n        children: /*#__PURE__*/_jsx(IconPlus, {})\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: style.line\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.contElements,\n      children: [size(avalivilities) == 0 && /*#__PURE__*/_jsx(\"div\", {\n        className: style.empty,\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"input\",\n          tag: \"empty_quotes\"\n        })\n      }), size(avalivilities) > 0 && /*#__PURE__*/_jsxs(\"table\", {\n        className: style.tableElements,\n        children: [/*#__PURE__*/_jsx(\"thead\", {\n          children: /*#__PURE__*/_jsxs(\"tr\", {\n            children: [/*#__PURE__*/_jsx(\"th\", {\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"day_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"th\", {\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"from_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"th\", {\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"to_quotes\"\n              })\n            }), /*#__PURE__*/_jsx(\"th\", {\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"options\"\n              })\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"tbody\", {\n          children: map(avalivilities, availaility => {\n            var _availaility$fromTime, _availaility$toTime;\n\n            let findDay = days.find(obj => obj.id === (availaility === null || availaility === void 0 ? void 0 : availaility.weekday));\n            let from = availaility === null || availaility === void 0 ? void 0 : (_availaility$fromTime = availaility.fromTime) === null || _availaility$fromTime === void 0 ? void 0 : _availaility$fromTime.split(\":\").splice(0, 2).join(\":\");\n            let to = availaility === null || availaility === void 0 ? void 0 : (_availaility$toTime = availaility.toTime) === null || _availaility$toTime === void 0 ? void 0 : _availaility$toTime.split(\":\").splice(0, 2).join(\":\");\n            return /*#__PURE__*/_jsxs(\"tr\", {\n              children: [/*#__PURE__*/_jsx(\"td\", {\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: findDay === null || findDay === void 0 ? void 0 : findDay.name\n                })\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: from\n              }), /*#__PURE__*/_jsx(\"td\", {\n                children: to\n              }), /*#__PURE__*/_jsxs(\"td\", {\n                className: style.contButtons,\n                children: [/*#__PURE__*/_jsx(\"button\", {\n                  className: style.buttonDelete,\n                  onClick: () => DeleteElement(availaility),\n                  children: /*#__PURE__*/_jsx(IconClose, {})\n                }), /*#__PURE__*/_jsx(\"button\", {\n                  className: style.buttonEdit,\n                  onClick: () => ClickEditElement(availaility),\n                  children: /*#__PURE__*/_jsx(IconEdit, {})\n                })]\n              })]\n            }, availaility === null || availaility === void 0 ? void 0 : availaility.id);\n          })\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}