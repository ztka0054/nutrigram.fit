{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alex9\\\\Nutrigram_Web\\\\web\\\\contexts\\\\AppContext.js\";\nimport React, { useState, useEffect, createContext, useMemo } from \"react\";\nimport { useRouter } from \"next/router\";\nimport i18n from \"../helper/i18n/config\";\nimport TagManager from \"react-gtm-module\";\nimport { getCurrency } from \"../utils/localStorage\"; // import enviroment from \"../helper/enviroment/config\";\n// const tagManagerArgs = {\n//     gtmId: enviroment.idGoogleTagManagger,\n// };\n//Context\n\nexport const AppContext = /*#__PURE__*/createContext(null); //Provider\n\nconst AppContextProvider = ({\n  children\n}) => {\n  const {\n    locale,\n    pathname\n  } = useRouter();\n  const {\n    0: useLocale,\n    1: setUseLocale\n  } = useState(null);\n  const {\n    0: queryLang,\n    1: setQueryLang\n  } = useState(null);\n  const {\n    0: basePath,\n    1: setBasePath\n  } = useState(null);\n  const {\n    0: objectsSignUp,\n    1: setObjectsSignUp\n  } = useState(null);\n  const {\n    0: flagChangeElement,\n    1: setFlagChangeElement\n  } = useState(false);\n  useEffect(async () => {\n    (async () => {\n      setUseLocale(null);\n      await i18n.changeLanguage(locale);\n      setUseLocale(locale);\n    })();\n  }, [locale]); // const [loadTagManager, setLoadTagManager] = useState(false);\n  // useEffect(() => {\n  //     TagManager.initialize(tagManagerArgs);\n  //     setLoadTagManager(true);\n  // }, []);\n\n  const putQueryLang = data => {\n    setQueryLang(data);\n  };\n\n  const putBasePath = data => {\n    setBasePath(data);\n  };\n\n  useEffect(() => {\n    setQueryLang({});\n    setBasePath(null);\n  }, [pathname]);\n\n  const putObjectSignUp = data => {\n    setObjectsSignUp(data);\n  };\n\n  const putFlagChangeElement = () => {\n    setFlagChangeElement(!flagChangeElement);\n  };\n\n  const values = useMemo(() => ({\n    locale: useLocale,\n    queryLang,\n    putQueryLang,\n    basePath,\n    putBasePath,\n    // loadTagManager,\n    objectsSignUp,\n    putObjectSignUp,\n    flagChangeElement,\n    putFlagChangeElement\n  }), [useLocale, queryLang, flagChangeElement]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n};\n\nexport default AppContextProvider;","map":{"version":3,"sources":["C:/Users/alex9/Nutrigram_Web/web/contexts/AppContext.js"],"names":["React","useState","useEffect","createContext","useMemo","useRouter","i18n","TagManager","getCurrency","AppContext","AppContextProvider","children","locale","pathname","useLocale","setUseLocale","queryLang","setQueryLang","basePath","setBasePath","objectsSignUp","setObjectsSignUp","flagChangeElement","setFlagChangeElement","changeLanguage","putQueryLang","data","putBasePath","putObjectSignUp","putFlagChangeElement","values"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,EAAoDC,OAApD,QAAmE,OAAnE;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,SAASC,WAAT,QAA4B,uBAA5B,C,CACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,IAAD,CAAhC,C,CAEP;;AACA,MAAMO,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBR,SAAS,EAAtC;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACe,SAAD;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACiB,QAAD;AAAA,OAAWC;AAAX,MAA0BlB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAACmB,aAAD;AAAA,OAAgBC;AAAhB,MAAoCpB,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM;AAAA,OAACqB,iBAAD;AAAA,OAAoBC;AAApB,MAA4CtB,QAAQ,CAAC,KAAD,CAA1D;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClB,KAAC,YAAY;AACTa,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMT,IAAI,CAACkB,cAAL,CAAoBZ,MAApB,CAAN;AACAG,MAAAA,YAAY,CAACH,MAAD,CAAZ;AACH,KAJD;AAKH,GANQ,EAMN,CAACA,MAAD,CANM,CAAT,CARyC,CAgBzC;AAEA;AACA;AACA;AACA;;AAEA,QAAMa,YAAY,GAAIC,IAAD,IAAU;AAC3BT,IAAAA,YAAY,CAACS,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAID,IAAD,IAAU;AAC1BP,IAAAA,WAAW,CAACO,IAAD,CAAX;AACH,GAFD;;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAHQ,EAGN,CAACN,QAAD,CAHM,CAAT;;AAKA,QAAMe,eAAe,GAAIF,IAAD,IAAU;AAC9BL,IAAAA,gBAAgB,CAACK,IAAD,CAAhB;AACH,GAFD;;AAIA,QAAMG,oBAAoB,GAAG,MAAM;AAC/BN,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACH,GAFD;;AAIA,QAAMQ,MAAM,GAAG1B,OAAO,CAClB,OAAO;AACHQ,IAAAA,MAAM,EAAEE,SADL;AAEHE,IAAAA,SAFG;AAGHS,IAAAA,YAHG;AAIHP,IAAAA,QAJG;AAKHS,IAAAA,WALG;AAMH;AACAP,IAAAA,aAPG;AAQHQ,IAAAA,eARG;AASHN,IAAAA,iBATG;AAUHO,IAAAA;AAVG,GAAP,CADkB,EAalB,CAACf,SAAD,EAAYE,SAAZ,EAAuBM,iBAAvB,CAbkB,CAAtB;AAgBA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEQ,MAA5B;AAAA,cAAqCnB;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA7DD;;AA+DA,eAAeD,kBAAf","sourcesContent":["import React, { useState, useEffect, createContext, useMemo } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport i18n from \"../helper/i18n/config\";\r\nimport TagManager from \"react-gtm-module\";\r\n\r\nimport { getCurrency } from \"../utils/localStorage\";\r\n// import enviroment from \"../helper/enviroment/config\";\r\n// const tagManagerArgs = {\r\n//     gtmId: enviroment.idGoogleTagManagger,\r\n// };\r\n\r\n//Context\r\nexport const AppContext = createContext(null);\r\n\r\n//Provider\r\nconst AppContextProvider = ({ children }) => {\r\n    const { locale, pathname } = useRouter();\r\n    const [useLocale, setUseLocale] = useState(null);\r\n    const [queryLang, setQueryLang] = useState(null);\r\n    const [basePath, setBasePath] = useState(null);\r\n    const [objectsSignUp, setObjectsSignUp] = useState(null);\r\n    const [flagChangeElement, setFlagChangeElement] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        (async () => {\r\n            setUseLocale(null);\r\n            await i18n.changeLanguage(locale);\r\n            setUseLocale(locale);\r\n        })();\r\n    }, [locale]);\r\n\r\n    // const [loadTagManager, setLoadTagManager] = useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     TagManager.initialize(tagManagerArgs);\r\n    //     setLoadTagManager(true);\r\n    // }, []);\r\n\r\n    const putQueryLang = (data) => {\r\n        setQueryLang(data);\r\n    };\r\n\r\n    const putBasePath = (data) => {\r\n        setBasePath(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setQueryLang({});\r\n        setBasePath(null);\r\n    }, [pathname]);\r\n\r\n    const putObjectSignUp = (data) => {\r\n        setObjectsSignUp(data);\r\n    };\r\n\r\n    const putFlagChangeElement = () => {\r\n        setFlagChangeElement(!flagChangeElement);\r\n    };\r\n\r\n    const values = useMemo(\r\n        () => ({\r\n            locale: useLocale,\r\n            queryLang,\r\n            putQueryLang,\r\n            basePath,\r\n            putBasePath,\r\n            // loadTagManager,\r\n            objectsSignUp,\r\n            putObjectSignUp,\r\n            flagChangeElement,\r\n            putFlagChangeElement,\r\n        }),\r\n        [useLocale, queryLang, flagChangeElement]\r\n    );\r\n\r\n    return <AppContext.Provider value={values}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}