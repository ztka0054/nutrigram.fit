{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\nimport { Collapse, CardBody, Card } from \"reactstrap\";\nimport * as Yup from \"yup\";\nimport { map, size } from \"lodash\";\nimport moment from \"moment\";\nimport useApp from \"../../../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../../../../modules/Forms/MessageValidation\";\nimport request from \"../../../../../../../../helper/core_services/core/requestService\";\nimport patient from \"../../../../../../../../helper/core_services/endpoints/patients\";\nimport menu from \"../../../../../../../../helper/core_services/endpoints/menu\";\nimport { message_1 } from \"../../../../../../../../helper/appearance/messages\";\nimport GetLanguage from \"../../../../../../../../helper/i18n/getValueTagLang\";\nimport FormContMenu from \"./FormContMenu\";\nvar emptyField = {\n  monday: null,\n  tuesday: null,\n  wednesday: null,\n  thursday: null,\n  friday: null,\n  saturday: null,\n  sunday: null\n};\nexport default function FormMenu(_ref) {\n  var dataMenu = _ref.dataMenu,\n      ClickShowConsult = _ref.ClickShowConsult,\n      setDataMenu = _ref.setDataMenu,\n      menuSelect = _ref.menuSelect,\n      dataMenuPatient = _ref.dataMenuPatient;\n  var router = useRouter();\n  var id = router.query.id;\n  var formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, _ref2) {\n        var resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm;\n                setDataMenu(formData);\n                ClickShowConsult();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect(function () {\n    if (dataMenu != null) formik.setValues(dataMenu);\n  }, [dataMenu]);\n  useEffect(function () {\n    if (menuSelect != null) {\n      var values = {\n        patient: id\n      };\n      values.menu = menuSelect.id;\n      values.name = menuSelect.name;\n      var schedules = [];\n      if (dataMenuPatient == null) schedules = map(menuSelect.mealTypeMenus, function (element) {\n        var _element$mealType, _element$mealType2, _element$mealType3, _element$mealType4;\n\n        return {\n          type: element === null || element === void 0 ? void 0 : (_element$mealType = element.mealType) === null || _element$mealType === void 0 ? void 0 : _element$mealType.id,\n          name: element === null || element === void 0 ? void 0 : (_element$mealType2 = element.mealType) === null || _element$mealType2 === void 0 ? void 0 : _element$mealType2.name,\n          fromTime: element === null || element === void 0 ? void 0 : (_element$mealType3 = element.mealType) === null || _element$mealType3 === void 0 ? void 0 : _element$mealType3.fromTime,\n          toTime: element === null || element === void 0 ? void 0 : (_element$mealType4 = element.mealType) === null || _element$mealType4 === void 0 ? void 0 : _element$mealType4.toTime\n        };\n      });\n      if (dataMenuPatient != null) schedules = map(menuSelect.mealTypeMenus, function (element) {\n        var _element$mealType5, _element$mealType6, _element$mealType7, _element$mealType8;\n\n        return {\n          type: element === null || element === void 0 ? void 0 : (_element$mealType5 = element.mealType) === null || _element$mealType5 === void 0 ? void 0 : _element$mealType5.id,\n          name: element === null || element === void 0 ? void 0 : (_element$mealType6 = element.mealType) === null || _element$mealType6 === void 0 ? void 0 : _element$mealType6.name,\n          fromTime: element === null || element === void 0 ? void 0 : (_element$mealType7 = element.mealType) === null || _element$mealType7 === void 0 ? void 0 : _element$mealType7.fromTime,\n          toTime: element === null || element === void 0 ? void 0 : (_element$mealType8 = element.mealType) === null || _element$mealType8 === void 0 ? void 0 : _element$mealType8.toTime\n        };\n      });\n      values.schedules = schedules;\n      formik.setValues(values);\n    }\n  }, [menuSelect]);\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"name_menu\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-value\",\n            children: formik.values.name\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsx(FormikProvider, {\n          value: formik,\n          children: /*#__PURE__*/_jsx(FieldArray, {\n            name: \"schedules\",\n            render: function render(arrayHelpers) {\n              return /*#__PURE__*/_jsx(FormContMenu, {\n                formik: formik,\n                arrayHelpers: arrayHelpers,\n                father: \"schedules\"\n              });\n            }\n          })\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12 text-center sty-magin-b-1\",\n        children: /*#__PURE__*/_jsxs(\"button\", {\n          className: \"sty-button-dash-1\",\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-icon\",\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: \"/static/img/favicons/app/save_w.svg\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"button\",\n              tag: \"save\"\n            })\n          })]\n        })\n      })]\n    })\n  });\n}\n\nfunction initialValues() {\n  return {\n    schedules: [{}]\n  };\n}\n\nfunction validationSchema() {\n  return {// image_check: Yup.string().required(\"required\"),\n  };\n}","map":null,"metadata":{},"sourceType":"module"}