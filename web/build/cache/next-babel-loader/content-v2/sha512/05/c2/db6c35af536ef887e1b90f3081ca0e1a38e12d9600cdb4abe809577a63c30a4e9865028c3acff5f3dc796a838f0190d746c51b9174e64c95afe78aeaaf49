{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, createContext, useMemo } from \"react\";\nimport { setToken, getToken, removeToken } from \"../utils/localStorage\";\nimport { setPic, getPic, removePic } from \"../utils/localStorage\";\nimport { setIdNutritionist, getIdNutritionist, removeIdNutritionist } from \"../utils/localStorage\"; //Context\n\nexport const AppContext = /*#__PURE__*/createContext(null); //Provider\n\nconst AppContextProvider = ({\n  children\n}) => {\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(undefined);\n  const {\n    0: flagLogin,\n    1: setFlagLogin\n  } = useState(false);\n  const {\n    0: reloadUser,\n    1: setReloadUser\n  } = useState(false);\n  const {\n    0: isReady,\n    1: setIsReady\n  } = useState(false);\n  useEffect(() => {\n    const token = getToken();\n    const picture = getPic();\n    const idNutritionist = getIdNutritionist();\n\n    if (token) {\n      setAuth({\n        token,\n        picture,\n        idNutritionist\n      });\n      setFlagLogin(true);\n    } else {\n      setAuth(null);\n      setFlagLogin(false);\n    }\n\n    setReloadUser(false);\n    setIsReady(true);\n  }, [reloadUser, isReady]);\n\n  const login = user => {\n    setFlagLogin(true);\n    setToken(user.token);\n    setPic(user.picture);\n    setIdNutritionist(user.id);\n    setAuth({\n      token: user.token,\n      picture: user.picture,\n      idNutritionist: user.id\n    });\n  };\n\n  const logout = () => {\n    if (auth) {\n      removeToken();\n      removePic();\n      removeIdNutritionist();\n      setAuth(null);\n      setFlagLogin(false);\n    }\n  };\n\n  const authData = useMemo(() => ({\n    auth,\n    flagLogin,\n    login,\n    logout,\n    setReloadUser,\n    isReady\n  }), [auth, isReady]);\n  return /*#__PURE__*/_jsx(AppContext.Provider, {\n    value: authData,\n    children: children\n  });\n};\n\nexport default AppContextProvider;","map":null,"metadata":{},"sourceType":"module"}