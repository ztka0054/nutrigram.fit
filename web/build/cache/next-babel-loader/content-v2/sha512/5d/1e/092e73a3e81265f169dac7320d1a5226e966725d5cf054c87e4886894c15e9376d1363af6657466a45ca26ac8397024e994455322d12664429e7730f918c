{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport DatePicker from \"react-datepicker\";\nimport { setHours, setMinutes } from \"date-fns\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TagLang from \"../../../../../../modules/GetTagLang\";\nimport getValueTagLang from \"../../../../../../../helper/i18n/getValueTagLang\";\nimport request from \"../../../../../../../helper/core_services/core/requestService\";\nimport ApiAppoinments from \"../../../../../../../helper/core_services/endpoints/appointments\";\nimport InputSelect from \"../../../../../../components/Inputs/InputTypeForm_1/InputSelectForm_1_lang\";\nimport { days } from \"../../../../../../catalogs/quotes\";\nimport { startHour, endHour } from \"../../../../../../catalogs/quotes\";\nimport style from \"./formNew.module.scss\";\nexport default function IndexForm(_ref) {\n  var _formik$errors;\n\n  var setStateModal = _ref.setStateModal,\n      setRefresh = _ref.setRefresh,\n      availailityObject = _ref.availailityObject;\n  var router = useRouter();\n\n  var _useState = useState(startHour),\n      dateFrom = _useState[0],\n      setDateFrom = _useState[1];\n\n  var _useState2 = useState(endHour),\n      dateTo = _useState2[0],\n      setDateTo = _useState2[1];\n\n  useEffect(function () {\n    if (availailityObject) {\n      var fromTime = availailityObject === null || availailityObject === void 0 ? void 0 : availailityObject.fromTime.split(\":\");\n      var toTime = availailityObject === null || availailityObject === void 0 ? void 0 : availailityObject.toTime.split(\":\");\n      formik.setFieldValue(\"id\", availailityObject === null || availailityObject === void 0 ? void 0 : availailityObject.id);\n      formik.setFieldValue(\"weekday\", availailityObject === null || availailityObject === void 0 ? void 0 : availailityObject.weekday);\n      setDateFrom(setHours(setMinutes(new Date(), parseInt(fromTime[1])), parseInt(fromTime[0])));\n      setDateTo(setHours(setMinutes(new Date(), parseInt(toTime[1])), parseInt(toTime[0])));\n    }\n  }, [availailityObject]);\n  var formik = useFormik({\n    validateOnChange: false,\n    validateOnBlur: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, _ref2) {\n        var resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm;\n                if (formData !== null && formData !== void 0 && formData.id) UpdateElement(formData);else CreateElement(formData);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect(function () {\n    formik.setFieldValue(\"fromTime\", moment(dateFrom).format(\"HH:mm\"));\n  }, [dateFrom]);\n  useEffect(function () {\n    formik.setFieldValue(\"toTime\", moment(dateTo).format(\"HH:mm\"));\n  }, [dateTo]);\n\n  var UpdateElement = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return request(ApiAppoinments.patch_availabilities, formData, [formData === null || formData === void 0 ? void 0 : formData.id], {\n                locale: router.locale\n              });\n\n            case 2:\n              result = _context2.sent;\n\n              if (result) {\n                setStateModal(false);\n                setRefresh(true);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function UpdateElement(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var CreateElement = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(formData) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return request(ApiAppoinments.post_availabilities, formData, null, {\n                locale: router.locale\n              });\n\n            case 2:\n              result = _context3.sent;\n\n              if (result) {\n                setStateModal(false);\n                setRefresh(true);\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function CreateElement(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: style.contInputs,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.contInput,\n        children: /*#__PURE__*/_jsx(InputSelect, {\n          formik: formik,\n          elements: days,\n          title: getValueTagLang(\"input\", \"day_quotes\"),\n          name: \"weekday\",\n          value: formik.values.weekday,\n          error: formik === null || formik === void 0 ? void 0 : (_formik$errors = formik.errors) === null || _formik$errors === void 0 ? void 0 : _formik$errors.weekday\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.contInput,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: style.tag,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"from_quotes\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(DatePicker, {\n            className: \"\".concat(style.datePicker),\n            selected: dateFrom,\n            onChange: function onChange(date) {\n              return setDateFrom(date);\n            } // minDate={new Date()}\n            // maxDate={dateTo}\n            ,\n            showTimeSelect: true,\n            showTimeSelectOnly: true,\n            timeIntervals: 30,\n            timeCaption: \"Time\",\n            dateFormat: \"HH:mm\",\n            timeFormat: \"HH:mm\",\n            minTime: startHour,\n            maxTime: dateTo\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.contInput,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: style.tag,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"to_quotes\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(DatePicker, {\n            className: \"\".concat(style.datePicker),\n            selected: dateTo,\n            onChange: function onChange(date) {\n              return setDateTo(date);\n            } // minDate={dateFrom}\n            ,\n            showTimeSelect: true,\n            showTimeSelectOnly: true,\n            timeIntervals: 30,\n            timeCaption: \"Time\",\n            dateFormat: \"HH:mm\",\n            timeFormat: \"HH:mm\",\n            minTime: dateFrom,\n            maxTime: endHour\n          })\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.contButtons,\n      children: [/*#__PURE__*/_jsx(\"button\", {\n        className: style.buttonCancel,\n        onClick: function onClick() {\n          return setStateModal(false);\n        },\n        type: \"button\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"button\",\n          tag: \"cancel\"\n        })\n      }), /*#__PURE__*/_jsx(\"button\", {\n        className: style.buttonAccept,\n        type: \"submit\",\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"button\",\n          tag: \"accept\"\n        })\n      })]\n    })]\n  });\n}\n\nfunction initialValues() {\n  return {\n    weekday: \"\",\n    fromTime: \"\",\n    toTime: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    weekday: Yup.string().required(\"required\"),\n    fromTime: Yup.string().required(\"required\"),\n    toTime: Yup.string().required(\"required\")\n  };\n}","map":null,"metadata":{},"sourceType":"module"}