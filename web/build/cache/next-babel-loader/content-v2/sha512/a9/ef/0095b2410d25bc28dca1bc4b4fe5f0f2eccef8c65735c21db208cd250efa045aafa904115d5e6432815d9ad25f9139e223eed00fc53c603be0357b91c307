{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\nimport * as Yup from \"yup\";\nimport { map, size } from \"lodash\";\nimport moment from \"moment\";\nimport useApp from \"../../../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../../../modules/GetTagLang\";\nimport request from \"../../../../../../../../helper/core_services/core/requestService\";\nimport hydratation from \"../../../../../../../../helper/core_services/endpoints/hydration\";\nimport { message_1 } from \"../../../../../../../../helper/appearance/messages\";\nimport GetLanguage from \"../../../../../../../../helper/i18n/getValueTagLang\";\nimport SubFormQuestions from \"./FormContHydratation\";\nexport default function FormHydratation({\n  ShowData\n}) {\n  const {\n    query\n  } = useRouter();\n  const {\n    locale\n  } = useApp();\n  const {\n    0: dataUpdate,\n    1: setDataUpdate\n  } = useState([]);\n  const formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData, {\n      resetForm\n    }) => {\n      SendNewForm(formData, resetForm);\n    }\n  });\n  useEffect(() => {\n    GetDataHydratation();\n  }, []);\n\n  const GetDataHydratation = async () => {\n    let req = await request(hydratation.get_hydratation, null, [query.id], locale);\n\n    if (req != null) {\n      let hydrations = map(req, element => {\n        let values = _objectSpread({}, element);\n\n        values.fromTime = moment(`2020-01-01T${values.fromTime}`).toDate();\n        values.toTime = moment(`2020-01-01T${values.toTime}`).toDate();\n        return values;\n      });\n      formik.setValues({\n        hydrations\n      });\n      setDataUpdate(hydrations);\n    }\n  };\n\n  const SendNewForm = async formData => {\n    let arrayRequest = [];\n    map(dataUpdate, element => {\n      let find = formData.hydrations.find(obj => {\n        return obj.id === element.id;\n      });\n      if (find == undefined) arrayRequest.push(request(hydratation.delete_hydratation, null, [query.id, element.id], {\n        locale\n      }));\n    });\n    map(formData.hydrations, element => {\n      let params = _objectSpread({}, element);\n\n      params.fromTime = moment(params.fromTime).format(\"HH:mm:ss\");\n      params.toTime = moment(params.toTime).format(\"HH:mm:ss\");\n      if (!(params !== null && params !== void 0 && params.id)) arrayRequest.push(request(hydratation.post_hydratation, params, [query.id], {\n        locale\n      }));\n      if (params !== null && params !== void 0 && params.id) arrayRequest.push(request(hydratation.patch_hydratation, params, [query.id, params === null || params === void 0 ? void 0 : params.id], {\n        locale\n      }));\n    });\n    await Promise.all(arrayRequest);\n    ShowData();\n    message_1(GetLanguage(\"validation\", \"message_1\"));\n  };\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsx(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsx(FieldArray, {\n        name: \"hydrations\",\n        render: arrayHelpers => /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsx(SubFormQuestions, {\n                formik: formik,\n                arrayHelpers: arrayHelpers,\n                father: \"hydrations\"\n              })\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-right\",\n            children: /*#__PURE__*/_jsxs(\"button\", {\n              className: \"sty-button-dash-1 color-3\",\n              type: \"button\",\n              onClick: () => arrayHelpers.push({}),\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-icon\",\n                children: /*#__PURE__*/_jsx(\"img\", {\n                  src: \"/static/img/favicons/app/add_w.svg\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"button\",\n                  tag: \"add\"\n                })\n              })]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-12 text-center sty-magin-b-1\",\n            children: /*#__PURE__*/_jsxs(\"button\", {\n              className: \"sty-button-dash-1\",\n              type: \"submit\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-icon\",\n                children: /*#__PURE__*/_jsx(\"img\", {\n                  src: \"/static/img/favicons/app/save_w.svg\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"button\",\n                  tag: \"save\"\n                })\n              })]\n            })\n          })]\n        })\n      })\n    })\n  });\n}\n\nfunction initialValues() {\n  return {// image_check: \"\",\n  };\n}\n\nfunction validationSchema() {\n  return {// image_check: Yup.string().required(\"required\"),\n  };\n}","map":null,"metadata":{},"sourceType":"module"}