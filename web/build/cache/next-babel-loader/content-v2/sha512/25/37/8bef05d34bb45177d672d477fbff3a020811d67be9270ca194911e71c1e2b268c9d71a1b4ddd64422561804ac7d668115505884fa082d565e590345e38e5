{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\nimport * as Yup from \"yup\";\nimport { map } from \"lodash\";\nimport useApp from \"../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../../modules/Forms/MessageValidation\";\nimport GetLanguage from \"../../../../../../helper/i18n/getValueTagLang\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport patient from \"../../../../../../helper/core_services/endpoints/patients\";\nimport apiMedicalRecords from \"../../../../../../helper/core_services/endpoints/medical_records\";\nimport GetLanguages from \"../../../../../../helper/i18n/getValueTagLang\";\nimport { loadElement } from \"../../../../../../helper/appearance/load\";\nimport FieldCheck from \"../../../../../../helper/forms/elements/check\";\nimport FieldRadio from \"../../../../../../helper/forms/elements/radio\";\nimport FormSubContMediccation from \"./FormSubContMedication\";\nimport FormSubContSuplement from \"./FormSubContSuplement\";\nconst valuesRadioInit = [{\n  tag: GetLanguages(\"input\", \"no\"),\n  value: false\n}, {\n  tag: GetLanguages(\"input\", \"yes\"),\n  value: true\n}];\nexport default function FormClinic({\n  idPatient = null,\n  setFormClinic,\n  setFlagSendClinic\n}) {\n  var _formik$values;\n\n  const {\n    locale\n  } = useApp();\n  const {\n    0: flagsFields,\n    1: setFlagsFields\n  } = useState({});\n  const {\n    0: valuesRadio,\n    1: setValuesRadio\n  } = useState([]);\n  const formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: async (formData, {\n      resetForm\n    }) => {\n      if (idPatient == null) SendForm(formData, resetForm);\n      if (idPatient != null) UpdateForm(formData);\n    }\n  });\n  useEffect(() => {\n    setFormClinic(formik);\n  }, []);\n  useEffect(() => {\n    if (idPatient != null) getInformation();\n  }, [idPatient]);\n  useEffect(() => {\n    GetFlagsActive();\n  }, []);\n  useEffect(() => {\n    setValuesRadio(valuesRadioInit);\n  }, [locale]);\n\n  const GetFlagsActive = async () => {\n    let req = await request(apiMedicalRecords.get_settings_medical, null, null, {\n      locale\n    }, false);\n\n    if (req != null) {\n      setFlagsFields(req);\n    }\n  };\n\n  const getInformation = async () => {\n    let values = {};\n    let req = await request(apiMedicalRecords.get_medical, null, [idPatient], {\n      locale\n    }, false);\n\n    if (req != null) {\n      values = _objectSpread({}, req);\n    }\n\n    let reqMedication = await request(apiMedicalRecords.get_medication, null, [idPatient], {\n      locale\n    }, false);\n\n    if (reqMedication != null) {\n      values.medications = reqMedication;\n    }\n\n    let reqSuplements = await request(apiMedicalRecords.get_suplement, null, [idPatient], {\n      locale\n    }, false);\n\n    if (reqSuplements != null) {\n      values.suplements = reqSuplements;\n    }\n\n    formik.setValues(values);\n  };\n\n  const SendForm = async formData => {\n    loadElement(true);\n    await request(apiMedicalRecords.post_new_medical, formData, [formData.idUser], {\n      locale\n    });\n    loadElement(false);\n    let data = {\n      idUser: formData.idUser\n    };\n    await SaveMedication(formData, data);\n    await SaveSuplements(formData, data);\n    setFlagSendClinic(true);\n  };\n\n  const SaveMedication = async (formData, info) => {\n    let ArrayRequest = [];\n    map(formData.medications, element => {\n      ArrayRequest.push(request(apiMedicalRecords.post_new_medication, element, [info.idUser], {\n        locale\n      }));\n    });\n    loadElement(true);\n    await Promise.all(ArrayRequest);\n    loadElement(false);\n  };\n\n  const SaveSuplements = async (formData, info) => {\n    let ArrayRequest = [];\n    map(formData.suplements, element => {\n      ArrayRequest.push(request(apiMedicalRecords.post_new_suplement, element, [info.idUser], {\n        locale\n      }));\n    });\n    loadElement(true);\n    await Promise.all(ArrayRequest);\n    loadElement(false);\n  };\n\n  const UpdateForm = async formData => {\n    loadElement(true);\n    await request(apiMedicalRecords.patch_medical, formData, [idPatient], locale);\n    await request(apiMedicalRecords.put_medication, formData.medications, [idPatient], {\n      locale\n    });\n    await request(apiMedicalRecords.put_suplement, formData.suplements, [idPatient], {\n      locale\n    });\n    loadElement(false);\n    setFlagSendClinic(true);\n  };\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.reason) && /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"reason_consultation\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: `reason`,\n              value: formik.values.reason,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.reason\n            })]\n          })]\n        }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.notes) && /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"notes\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: `notes`,\n              value: formik.values.notes,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.notes\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-input-tag-g-1\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"current_conditions\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.diarrhea) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"diarrhea\",\n              tag: GetLanguage(\"input\", \"diarrhea\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.diarrhea\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.constipation) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"constipation\",\n              tag: GetLanguage(\"input\", \"constipation\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.constipation\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.gastritis) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"gastritis\",\n              tag: GetLanguage(\"input\", \"gastritis\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.gastritis\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.ulcer) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"ulcer\",\n              tag: GetLanguage(\"input\", \"ulcer\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.ulcer\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.nausea) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"nausea\",\n              tag: GetLanguage(\"input\", \"nausea\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.nausea\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.pyrosis) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"pyrosis\",\n              tag: GetLanguage(\"input\", \"pyrosis\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.pyrosis\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.vomit) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"vomit\",\n              tag: GetLanguage(\"input\", \"vomit\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.vomit\n            })]\n          }), flagsFields.colitis && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"colitis\",\n              tag: GetLanguage(\"input\", \"colitis\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.colitis\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.observations) && /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"observations\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: `observations`,\n              value: formik.values.observations,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.observations\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-input-tag-g-1\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"take\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.laxative) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"laxative\",\n              tag: GetLanguage(\"input\", \"laxative\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.laxative\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.diuretic) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"diuretic\",\n              tag: GetLanguage(\"input\", \"diuretic\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.diuretic\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.antacid) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"antacid\",\n              tag: GetLanguage(\"input\", \"antacid\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.antacid\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.analgesic) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"analgesic\",\n              tag: GetLanguage(\"input\", \"analgesic\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.analgesic\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-input-tag-g-1\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"family_background\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.obesity) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"obesity\",\n              tag: GetLanguage(\"input\", \"obesity\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.obesity\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.diabetes) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"diabetes\",\n              tag: GetLanguage(\"input\", \"diabetes\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.diabetes\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.hypertension) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"hypertension\",\n              tag: GetLanguage(\"input\", \"hypertension\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.hypertension\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.cancer) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"cancer\",\n              tag: GetLanguage(\"input\", \"cancer\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.cancer\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.thyroidProblems) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"thyroidProblems\",\n              tag: GetLanguage(\"input\", \"thyroidProblems\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.thyroidProblems\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.dyslipidemia) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"dyslipidemia\",\n              tag: GetLanguage(\"input\", \"dyslipidemia\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.dyslipidemia\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.heartDisease) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"heartDisease\",\n              tag: GetLanguage(\"input\", \"heartDisease\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.heartDisease\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.gastrointestinalDisease) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"gastrointestinalDisease\",\n              tag: GetLanguage(\"input\", \"gastrointestinalDisease\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.gastrointestinalDisease\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.otherDiseases) && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"other_ailments\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: `otherDiseases`,\n                  value: formik.values.otherDiseases,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.otherDiseases\n                })]\n              })]\n            })\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.surgeries) && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"operations_1\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: `surgeries`,\n                  value: formik.values.surgeries,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.surgeries\n                })]\n              })]\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"take_medication\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(FieldRadio, {\n              formik: formik,\n              name: \"medicated\",\n              values: valuesRadio\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.medicated\n            })]\n          })]\n        })\n      }), (formik === null || formik === void 0 ? void 0 : (_formik$values = formik.values) === null || _formik$values === void 0 ? void 0 : _formik$values.medicated) && /*#__PURE__*/_jsx(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsx(FieldArray, {\n          name: \"medications\",\n          render: arrayHelpers => /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsx(FormSubContMediccation, {\n              formik: formik,\n              arrayHelpers: arrayHelpers,\n              father: \"medications\"\n            })\n          })\n        })\n      }), /*#__PURE__*/_jsx(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsx(FieldArray, {\n          name: \"suplements\",\n          render: arrayHelpers => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-12 cont-field-array\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"sty-input-tag-g-1\",\n              children: /*#__PURE__*/_jsx(TagLang, {\n                group: \"input\",\n                tag: \"take_supplement\"\n              })\n            }), /*#__PURE__*/_jsx(FormSubContSuplement, {\n              formik: formik,\n              arrayHelpers: arrayHelpers,\n              father: \"suplements\"\n            })]\n          })\n        })\n      })]\n    })\n  });\n}\n\nfunction initialValues() {\n  return {\n    reason: \"\",\n    notes: \"\",\n    diarrhea: false,\n    constipation: false,\n    gastritis: false,\n    ulcer: false,\n    nausea: false,\n    pyrosis: false,\n    vomit: false,\n    colitis: false,\n    observations: \"\",\n    laxative: false,\n    diuretic: false,\n    antacid: false,\n    analgesic: false,\n    obesity: false,\n    diabetes: false,\n    hypertension: false,\n    cancer: false,\n    thyroidProblems: false,\n    dyslipidemia: false,\n    heartDisease: false,\n    gastrointestinalDisease: false,\n    otherDiseases: \"\",\n    surgeries: \"\",\n    medicated: false\n  };\n}\n\nfunction validationSchema() {\n  return {};\n}","map":null,"metadata":{},"sourceType":"module"}