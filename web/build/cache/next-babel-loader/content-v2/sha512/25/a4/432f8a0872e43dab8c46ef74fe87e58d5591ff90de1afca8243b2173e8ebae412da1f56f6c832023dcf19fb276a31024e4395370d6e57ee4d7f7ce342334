{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\nimport * as Yup from \"yup\";\nimport { map } from \"lodash\";\nimport useApp from \"../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../../modules/Forms/MessageValidation\";\nimport GetLanguage from \"../../../../../../helper/i18n/getValueTagLang\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport patient from \"../../../../../../helper/core_services/endpoints/patients\";\nimport apiMedicalRecords from \"../../../../../../helper/core_services/endpoints/medical_records\";\nimport GetLanguages from \"../../../../../../helper/i18n/getValueTagLang\";\nimport { loadElement } from \"../../../../../../helper/appearance/load\";\nimport FieldCheck from \"../../../../../../helper/forms/elements/check\";\nimport FieldRadio from \"../../../../../../helper/forms/elements/radio\";\nimport FormSubContMediccation from \"./FormSubContMedication\";\nimport FormSubContSuplement from \"./FormSubContSuplement\";\nvar valuesRadioInit = [{\n  tag: GetLanguages(\"input\", \"no\"),\n  value: false\n}, {\n  tag: GetLanguages(\"input\", \"yes\"),\n  value: true\n}];\nexport default function FormClinic(_ref) {\n  var _formik$values;\n\n  var _ref$idPatient = _ref.idPatient,\n      idPatient = _ref$idPatient === void 0 ? null : _ref$idPatient,\n      setFormClinic = _ref.setFormClinic,\n      setFlagSendClinic = _ref.setFlagSendClinic;\n\n  var _useApp = useApp(),\n      locale = _useApp.locale;\n\n  var _useState = useState({}),\n      flagsFields = _useState[0],\n      setFlagsFields = _useState[1];\n\n  var _useState2 = useState([]),\n      valuesRadio = _useState2[0],\n      setValuesRadio = _useState2[1];\n\n  var formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, _ref2) {\n        var resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm;\n                if (idPatient == null) SendForm(formData, resetForm);\n                if (idPatient != null) UpdateForm(formData);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect(function () {\n    setFormClinic(formik);\n  }, []);\n  useEffect(function () {\n    if (idPatient != null) getInformation();\n  }, [idPatient]);\n  useEffect(function () {\n    GetFlagsActive();\n  }, []);\n  useEffect(function () {\n    setValuesRadio(valuesRadioInit);\n  }, [locale]);\n\n  var GetFlagsActive = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var req;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return request(apiMedicalRecords.get_settings_medical, null, null, {\n                locale: locale\n              }, false);\n\n            case 2:\n              req = _context2.sent;\n\n              if (req != null) {\n                setFlagsFields(req);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function GetFlagsActive() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getInformation = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var values, req, reqMedication, reqSuplements;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              values = {};\n              _context3.next = 3;\n              return request(apiMedicalRecords.get_medical, null, [idPatient], {\n                locale: locale\n              }, false);\n\n            case 3:\n              req = _context3.sent;\n\n              if (req != null) {\n                values = _objectSpread({}, req);\n              }\n\n              _context3.next = 7;\n              return request(apiMedicalRecords.get_medication, null, [idPatient], {\n                locale: locale\n              }, false);\n\n            case 7:\n              reqMedication = _context3.sent;\n\n              if (reqMedication != null) {\n                values.medications = reqMedication;\n              }\n\n              _context3.next = 11;\n              return request(apiMedicalRecords.get_suplement, null, [idPatient], {\n                locale: locale\n              }, false);\n\n            case 11:\n              reqSuplements = _context3.sent;\n\n              if (reqSuplements != null) {\n                values.suplements = reqSuplements;\n              }\n\n              formik.setValues(values);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getInformation() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var SendForm = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(formData) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              loadElement(true);\n              _context4.next = 3;\n              return request(apiMedicalRecords.post_new_medical, formData, [formData.idUser], {\n                locale: locale\n              });\n\n            case 3:\n              loadElement(false);\n              data = {\n                idUser: formData.idUser\n              };\n              _context4.next = 7;\n              return SaveMedication(formData, data);\n\n            case 7:\n              _context4.next = 9;\n              return SaveSuplements(formData, data);\n\n            case 9:\n              setFlagSendClinic(true);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function SendForm(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var SaveMedication = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(formData, info) {\n      var ArrayRequest;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              ArrayRequest = [];\n              map(formData.medications, function (element) {\n                ArrayRequest.push(request(apiMedicalRecords.post_new_medication, element, [info.idUser], {\n                  locale: locale\n                }));\n              });\n              loadElement(true);\n              _context5.next = 5;\n              return Promise.all(ArrayRequest);\n\n            case 5:\n              loadElement(false);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function SaveMedication(_x4, _x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var SaveSuplements = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(formData, info) {\n      var ArrayRequest;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              ArrayRequest = [];\n              map(formData.suplements, function (element) {\n                ArrayRequest.push(request(apiMedicalRecords.post_new_suplement, element, [info.idUser], {\n                  locale: locale\n                }));\n              });\n              loadElement(true);\n              _context6.next = 5;\n              return Promise.all(ArrayRequest);\n\n            case 5:\n              loadElement(false);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function SaveSuplements(_x6, _x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var UpdateForm = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(formData) {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              loadElement(true);\n              _context7.next = 3;\n              return request(apiMedicalRecords.patch_medical, formData, [idPatient], locale);\n\n            case 3:\n              _context7.next = 5;\n              return request(apiMedicalRecords.put_medication, formData.medications, [idPatient], {\n                locale: locale\n              });\n\n            case 5:\n              _context7.next = 7;\n              return request(apiMedicalRecords.put_suplement, formData.suplements, [idPatient], {\n                locale: locale\n              });\n\n            case 7:\n              loadElement(false);\n              setFlagSendClinic(true);\n\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function UpdateForm(_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.reason) && /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"reason_consultation\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"reason\",\n              value: formik.values.reason,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.reason\n            })]\n          })]\n        }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.notes) && /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"notes\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"notes\",\n              value: formik.values.notes,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.notes\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-input-tag-g-1\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"current_conditions\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.diarrhea) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"diarrhea\",\n              tag: GetLanguage(\"input\", \"diarrhea\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.diarrhea\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.constipation) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"constipation\",\n              tag: GetLanguage(\"input\", \"constipation\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.constipation\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.gastritis) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"gastritis\",\n              tag: GetLanguage(\"input\", \"gastritis\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.gastritis\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.ulcer) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"ulcer\",\n              tag: GetLanguage(\"input\", \"ulcer\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.ulcer\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.nausea) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"nausea\",\n              tag: GetLanguage(\"input\", \"nausea\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.nausea\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.pyrosis) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"pyrosis\",\n              tag: GetLanguage(\"input\", \"pyrosis\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.pyrosis\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.vomit) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"vomit\",\n              tag: GetLanguage(\"input\", \"vomit\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.vomit\n            })]\n          }), flagsFields.colitis && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"colitis\",\n              tag: GetLanguage(\"input\", \"colitis\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.colitis\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.observations) && /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"observations\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"textarea\", {\n              name: \"observations\",\n              value: formik.values.observations,\n              onChange: formik.handleChange,\n              rows: 3\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.observations\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-input-tag-g-1\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"take\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.laxative) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"laxative\",\n              tag: GetLanguage(\"input\", \"laxative\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.laxative\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.diuretic) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"diuretic\",\n              tag: GetLanguage(\"input\", \"diuretic\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.diuretic\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.antacid) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"antacid\",\n              tag: GetLanguage(\"input\", \"antacid\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.antacid\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.analgesic) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"analgesic\",\n              tag: GetLanguage(\"input\", \"analgesic\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.analgesic\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-input-tag-g-1\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"family_background\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.obesity) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"obesity\",\n              tag: GetLanguage(\"input\", \"obesity\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.obesity\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.diabetes) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"diabetes\",\n              tag: GetLanguage(\"input\", \"diabetes\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.diabetes\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.hypertension) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"hypertension\",\n              tag: GetLanguage(\"input\", \"hypertension\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.hypertension\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.cancer) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"cancer\",\n              tag: GetLanguage(\"input\", \"cancer\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.cancer\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.thyroidProblems) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"thyroidProblems\",\n              tag: GetLanguage(\"input\", \"thyroidProblems\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.thyroidProblems\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.dyslipidemia) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"dyslipidemia\",\n              tag: GetLanguage(\"input\", \"dyslipidemia\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.dyslipidemia\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.heartDisease) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"heartDisease\",\n              tag: GetLanguage(\"input\", \"heartDisease\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.heartDisease\n            })]\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.gastrointestinalDisease) && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsx(FieldCheck, {\n              formik: formik,\n              name: \"gastrointestinalDisease\",\n              tag: GetLanguage(\"input\", \"gastrointestinalDisease\")\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.gastrointestinalDisease\n            })]\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [(flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.otherDiseases) && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"other_ailments\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: \"otherDiseases\",\n                  value: formik.values.otherDiseases,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.otherDiseases\n                })]\n              })]\n            })\n          }), (flagsFields === null || flagsFields === void 0 ? void 0 : flagsFields.surgeries) && /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"operations_1\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"textarea\", {\n                  name: \"surgeries\",\n                  value: formik.values.surgeries,\n                  onChange: formik.handleChange,\n                  rows: 3\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.surgeries\n                })]\n              })]\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"take_medication\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(FieldRadio, {\n              formik: formik,\n              name: \"medicated\",\n              values: valuesRadio\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.medicated\n            })]\n          })]\n        })\n      }), (formik === null || formik === void 0 ? void 0 : (_formik$values = formik.values) === null || _formik$values === void 0 ? void 0 : _formik$values.medicated) && /*#__PURE__*/_jsx(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsx(FieldArray, {\n          name: \"medications\",\n          render: function render(arrayHelpers) {\n            return /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsx(FormSubContMediccation, {\n                formik: formik,\n                arrayHelpers: arrayHelpers,\n                father: \"medications\"\n              })\n            });\n          }\n        })\n      }), /*#__PURE__*/_jsx(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsx(FieldArray, {\n          name: \"suplements\",\n          render: function render(arrayHelpers) {\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"col-12 cont-field-array\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-input-tag-g-1\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"take_supplement\"\n                })\n              }), /*#__PURE__*/_jsx(FormSubContSuplement, {\n                formik: formik,\n                arrayHelpers: arrayHelpers,\n                father: \"suplements\"\n              })]\n            });\n          }\n        })\n      })]\n    })\n  });\n}\n\nfunction initialValues() {\n  return {\n    reason: \"\",\n    notes: \"\",\n    diarrhea: false,\n    constipation: false,\n    gastritis: false,\n    ulcer: false,\n    nausea: false,\n    pyrosis: false,\n    vomit: false,\n    colitis: false,\n    observations: \"\",\n    laxative: false,\n    diuretic: false,\n    antacid: false,\n    analgesic: false,\n    obesity: false,\n    diabetes: false,\n    hypertension: false,\n    cancer: false,\n    thyroidProblems: false,\n    dyslipidemia: false,\n    heartDisease: false,\n    gastrointestinalDisease: false,\n    otherDiseases: \"\",\n    surgeries: \"\",\n    medicated: false\n  };\n}\n\nfunction validationSchema() {\n  return {};\n}","map":null,"metadata":{},"sourceType":"module"}