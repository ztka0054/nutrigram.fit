{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { map, size } from \"lodash\";\nimport moment from \"moment\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport ApiAppoinments from \"../../../../../../helper/core_services/endpoints/appointments\";\nimport utcFormat from \"../../../../../../helper/date/utcFormat\";\nimport TimeZoneDate from \"../../../../../../helper/date/getTimeZoneHour\";\nimport IconLeft from \"../../../../../components/Icons/ArrowLeft\";\nimport IconRight from \"../../../../../components/Icons/ArrowRight\";\nimport IconChange from \"../../../../../components/Icons/Change\";\nimport LoadCircle from \"../../../../../components/Icons/LoadCircle\";\nimport getDays from \"../../../../../../helper/calendar/getDaysArray\";\nimport style from \"./calendar.module.scss\";\nexport default function Calendar(_ref) {\n  var setDateSelect = _ref.setDateSelect,\n      dateSelect = _ref.dateSelect,\n      unavailabilities = _ref.unavailabilities,\n      setActiveRefresh = _ref.setActiveRefresh,\n      activeRefresh = _ref.activeRefresh;\n  var router = useRouter();\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale;\n\n  var _useState = useState(null),\n      days = _useState[0],\n      setDays = _useState[1];\n\n  var _useState2 = useState(new Date()),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  useEffect(function () {\n    var ignore = false;\n    var today = new Date();\n    var daysCalendar = getDays(date.getFullYear(), date.getMonth());\n\n    function requestAvailavility() {\n      return _requestAvailavility.apply(this, arguments);\n    }\n\n    function _requestAvailavility() {\n      _requestAvailavility = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var daysObjects;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Promise.all(map(daysCalendar, /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(element, index) {\n                    var _element$date, resultAppoiments, resultChanges, quotes, changes, istoday, isDisabled;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(element == null)) {\n                              _context.next = 4;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", null);\n\n                          case 4:\n                            _context.next = 6;\n                            return request(ApiAppoinments.get_appointments, {\n                              state: 2,\n                              page_size: 1,\n                              datetime__gte: TimeZoneDate(utcFormat(element === null || element === void 0 ? void 0 : element.date), \"00:00\").format(),\n                              datetime__lte: TimeZoneDate(utcFormat(element === null || element === void 0 ? void 0 : element.date), \"23:59\").format()\n                            }, null, null, {\n                              local: router.locale\n                            });\n\n                          case 6:\n                            resultAppoiments = _context.sent;\n                            _context.next = 9;\n                            return request(ApiAppoinments.get_appointments, {\n                              state: 1,\n                              page_size: 1,\n                              datetime__gte: TimeZoneDate(utcFormat(element === null || element === void 0 ? void 0 : element.date), \"00:00\").format(),\n                              datetime__lte: TimeZoneDate(utcFormat(element === null || element === void 0 ? void 0 : element.date), \"23:59\").format()\n                            }, null, null, {\n                              local: router.locale\n                            });\n\n                          case 9:\n                            resultChanges = _context.sent;\n                            quotes = resultAppoiments === null || resultAppoiments === void 0 ? void 0 : resultAppoiments.result;\n                            changes = resultChanges === null || resultChanges === void 0 ? void 0 : resultChanges.result;\n                            istoday = false;\n                            isDisabled = false;\n                            if (element !== null && element !== void 0 && (_element$date = element.date) !== null && _element$date !== void 0 && _element$date.sameDay(today)) istoday = true;\n                            map(unavailabilities, function (unavailability) {\n                              var flagSameFrom = moment(element === null || element === void 0 ? void 0 : element.date).isSame(moment(unavailability === null || unavailability === void 0 ? void 0 : unavailability.fromDate));\n                              var flagSameTo = moment(element === null || element === void 0 ? void 0 : element.date).isSame(moment(unavailability === null || unavailability === void 0 ? void 0 : unavailability.toDate));\n                              var flagBetween = moment(element === null || element === void 0 ? void 0 : element.date).isBetween(moment(unavailability === null || unavailability === void 0 ? void 0 : unavailability.fromDate), moment(unavailability === null || unavailability === void 0 ? void 0 : unavailability.toDate));\n\n                              if (flagSameFrom || flagSameTo || flagBetween) {\n                                isDisabled = true;\n                              }\n                            });\n                            return _context.abrupt(\"return\", {\n                              istoday: istoday,\n                              isDisabled: isDisabled,\n                              day: element === null || element === void 0 ? void 0 : element.day,\n                              date: element === null || element === void 0 ? void 0 : element.date,\n                              quotes: quotes,\n                              changes: changes\n                            });\n\n                          case 17:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x, _x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }()));\n\n              case 2:\n                daysObjects = _context2.sent;\n                setDays(daysObjects);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _requestAvailavility.apply(this, arguments);\n    }\n\n    if (unavailabilities) if (activeRefresh) {\n      setDays(null);\n      requestAvailavility();\n      setActiveRefresh(false);\n    }\n    return function () {\n      ignore = true;\n    };\n  }, [activeRefresh, unavailabilities]);\n\n  var SubMonth = function SubMonth() {\n    var newDate = date;\n    newDate.setMonth(date.getMonth() - 1);\n    setDate(newDate);\n    setActiveRefresh(true);\n  };\n\n  var AddMonth = function AddMonth() {\n    var newDate = date;\n    newDate.setMonth(date.getMonth() + 1);\n    setDate(newDate);\n    setActiveRefresh(true);\n  };\n\n  var SelectDate = function SelectDate(obj) {\n    setDateSelect(obj === null || obj === void 0 ? void 0 : obj.date);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: style.contCalendar,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: style.header,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.date,\n        children: moment(date).locale(locale).format(\"MMMM YYYY\")\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.contArrow,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: style.arrow,\n          onClick: function onClick() {\n            return SubMonth();\n          },\n          children: /*#__PURE__*/_jsx(IconLeft, {})\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.arrow,\n          onClick: function onClick() {\n            return AddMonth();\n          },\n          children: /*#__PURE__*/_jsx(IconRight, {})\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.contAllCalendar,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: style.contNames,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: style.name,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"DOM.\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.name,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"LUN.\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.name,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"MAR.\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.name,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"MIR.\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.name,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"JUE.\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.name,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"VIE.\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.name,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"SAB.\"\n          })\n        })]\n      }), days && /*#__PURE__*/_jsx(\"div\", {\n        className: style.contDays,\n        children: map(days, function (day, index) {\n          if (day) {\n            var _day$date;\n\n            var isSelect = false;\n            if (day !== null && day !== void 0 && (_day$date = day.date) !== null && _day$date !== void 0 && _day$date.sameDay(dateSelect)) isSelect = true;\n            return /*#__PURE__*/_jsxs(\"div\", {\n              className: \"\".concat(style.day, \" \").concat(day !== null && day !== void 0 && day.istoday ? style.today : \"\", \"  \").concat(isSelect ? style.select : \"\", \" \").concat(day !== null && day !== void 0 && day.isDisabled ? style.disabled : \"\", \" \").concat(size(day === null || day === void 0 ? void 0 : day.quotes) > 0 ? style.quotes : \"\", \" \").concat(size(day === null || day === void 0 ? void 0 : day.changes) > 0 ? style.changes : \"\"),\n              onClick: function onClick() {\n                if (!(day !== null && day !== void 0 && day.isDisabled)) SelectDate(day);\n              },\n              children: [day === null || day === void 0 ? void 0 : day.day, /*#__PURE__*/_jsx(\"div\", {\n                className: \"\".concat(size(day === null || day === void 0 ? void 0 : day.changes) > 0 ? style.block : \"\", \" \").concat(style.changeIcon),\n                children: /*#__PURE__*/_jsx(IconChange, {})\n              })]\n            }, \"\".concat(index));\n          } else return /*#__PURE__*/_jsx(\"div\", {}, \"\".concat(index));\n        })\n      }), !days && /*#__PURE__*/_jsx(\"div\", {\n        className: style.loadCalendar,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: style.iconLoad,\n          children: /*#__PURE__*/_jsx(LoadCircle, {})\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: style.contSquedule,\n      children: /*#__PURE__*/_jsx(\"button\", {\n        onClick: function onClick() {\n          return router.push(\"/dashboard/quotes/schedules\");\n        },\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"input\",\n          tag: \"calendar_button\"\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}