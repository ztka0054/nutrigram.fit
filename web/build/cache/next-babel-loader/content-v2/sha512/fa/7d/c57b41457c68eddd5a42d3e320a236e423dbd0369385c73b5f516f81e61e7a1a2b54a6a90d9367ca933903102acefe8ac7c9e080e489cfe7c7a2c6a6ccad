{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { size } from \"lodash\";\nimport moment from \"moment\";\nimport IconPlus from \"../../../../../components/Icons/Plus\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport ApiAppoinments from \"../../../../../../helper/core_services/endpoints/appointments\";\nimport utcFormat from \"../../../../../../helper/date/utcFormat\";\nimport TimeZoneDate from \"../../../../../../helper/date/getTimeZoneHour\";\nimport ListChanges from \"./ListChanges\";\nimport List from \"./ListAppoiments\";\nimport ModalNew from \"./ModalNew\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport style from \"./data.module.scss\";\nexport default function Data(_ref) {\n  var dateSelect = _ref.dateSelect,\n      availabilities = _ref.availabilities,\n      setActiveRefresh = _ref.setActiveRefresh;\n  var router = useRouter();\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale;\n\n  var _useState = useState(false),\n      activeModal = _useState[0],\n      setActiveModal = _useState[1];\n\n  var _useState2 = useState([]),\n      appoiments = _useState2[0],\n      setAppoiments = _useState2[1];\n\n  var _useState3 = useState([]),\n      changes = _useState3[0],\n      setChanges = _useState3[1];\n\n  var _useState4 = useState(false),\n      activeRefreshList = _useState4[0],\n      setActiveRefreshList = _useState4[1];\n\n  useEffect(function () {\n    var ignore = false;\n\n    var requestAppoimentsDay = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var resultAppoiments, _appoiments, _changes;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return request(ApiAppoinments.get_appointments, {\n                  datetime__gte: TimeZoneDate(utcFormat(dateSelect), \"00:00\").format(),\n                  datetime__lte: TimeZoneDate(utcFormat(dateSelect), \"23:59\").format()\n                }, null, null, {\n                  local: router.locale\n                });\n\n              case 2:\n                resultAppoiments = _context.sent;\n\n                if (resultAppoiments) {\n                  _appoiments = resultAppoiments.result.filter(function (obj) {\n                    return obj.state === 2;\n                  });\n                  _changes = resultAppoiments.result.filter(function (obj) {\n                    return obj.state === 1;\n                  });\n                  setAppoiments(_appoiments);\n                  setChanges(_changes);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function requestAppoimentsDay() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    requestAppoimentsDay();\n    return function () {\n      ignore = true;\n    };\n  }, [dateSelect, activeRefreshList]);\n  useEffect(function () {\n    if (activeModal) setActiveModal(false);\n  }, [activeModal]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ModalNew, {\n      availabilities: availabilities,\n      active: activeModal,\n      dateSelect: dateSelect,\n      setActiveRefresh: setActiveRefresh,\n      activeRefreshList: activeRefreshList,\n      setActiveRefreshList: setActiveRefreshList\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.cont,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: style.contHeader,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: style.date,\n          children: moment(dateSelect).locale(locale).format(\"dddd, MMMM DD\")\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.contButton,\n          children: moment(moment().format(\"YYYY-MM-DD\")).isSameOrBefore(moment(dateSelect)) && /*#__PURE__*/_jsx(\"div\", {\n            className: style.buttonAdd,\n            onClick: function onClick() {\n              return setActiveModal(true);\n            },\n            children: /*#__PURE__*/_jsx(IconPlus, {})\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.contInfo,\n        children: [/*#__PURE__*/_jsx(ListChanges, {\n          appoiments: changes,\n          setActiveRefresh: setActiveRefresh,\n          activeRefreshList: activeRefreshList,\n          setActiveRefreshList: setActiveRefreshList\n        }), size(changes) > 0 && /*#__PURE__*/_jsx(\"div\", {\n          className: style.lineChange\n        }), /*#__PURE__*/_jsx(List, {\n          appoiments: appoiments\n        }), size(appoiments) == 0 && size(changes) == 0 && /*#__PURE__*/_jsx(\"div\", {\n          className: style.noneList,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"none_quotes_list\"\n          })\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}