{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport useApp from \"../../../../../../hooks/useApp\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport subscription from \"../../../../../../helper/core_services/endpoints/subscription\";\nimport numberWithComas from \"../../../../../../helper/text/textWithComas\";\nimport capitalize from \"../../../../../../helper/text/capitalize\";\nimport getLanguage from \"../../../../../../helper/i18n/getValueTagLang\";\nexport default function PlanSelected() {\n  var _useApp = useApp(),\n      locale = _useApp.locale,\n      objectsSignUp = _useApp.objectsSignUp;\n\n  var _useState = useState(null),\n      planSelected = _useState[0],\n      setPlanSelected = _useState[1];\n\n  useEffect(function () {\n    if (objectsSignUp !== null && objectsSignUp !== void 0 && objectsSignUp.selectedPlan) GetPlans();\n  }, [locale, objectsSignUp]);\n\n  var GetPlans = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var req;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return request(subscription.get_subcriptions, null, null, {\n                locale: locale\n              });\n\n            case 2:\n              req = _context.sent;\n              if (req != null) DrawPlan(req);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function GetPlans() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var DrawPlan = function DrawPlan(info) {\n    // let select = info.find((obj) => obj.id === getSelectPlan.element);\n    var select = info.find(function (obj) {\n      return obj.id === objectsSignUp.selectedPlan.id;\n    });\n\n    if (typeof select != \"undefined\") {\n      var description = select.description.split(\"\\r\\n\");\n      description = description.map(function (element, i) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-feature\",\n          children: element\n        });\n      });\n      var plan = select.prices.find( // (obj) => obj.id === getSelectPlan.plan\n      function (obj) {\n        return obj.id === objectsSignUp.selectedSubscritpion.id;\n      });\n\n      var planSelect = /*#__PURE__*/_jsxs(\"div\", {\n        className: \"sty-select-plan\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-title-plan sty-color-1\",\n          children: select.name\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-features\",\n          children: description\n        }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-price\",\n          children: [capitalize(plan.name), /*#__PURE__*/_jsx(\"br\", {}), getLanguage(\"input\", \"cost\"), \": $\", \" \", numberWithComas(parseFloat(plan.price.amount).toFixed(2))]\n        })]\n      });\n\n      setPlanSelected(planSelect);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: planSelected\n  });\n}","map":null,"metadata":{},"sourceType":"module"}