{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { map } from \"lodash\";\nimport useApp from \"../../../../hooks/useApp\";\nimport useAuth from \"../../../../hooks/useAuth\";\nimport SetLink from \"../../../modules/SetLink\";\nimport TagLang from \"../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../modules/Forms/MessageValidation\";\nimport { loadElement } from \"../../../../helper/appearance/load\";\nimport { message_1 } from \"../../../../helper/appearance/messages\";\nimport GetLanguage from \"../../../../helper/i18n/getValueTagLang\";\nimport request from \"../../../../helper/core_services/core/requestService\";\nimport nutri from \"../../../../helper/core_services/endpoints/nutritionist\";\nimport medical from \"../../../../helper/core_services/endpoints/medical_records\";\nimport FieldPic from \"../../../../helper/forms/elements/pic\";\nimport FieldSelect from \"../../../../helper/forms/elements/select\";\nimport FieldCheck from \"../../../../helper/forms/elements/check\";\nexport default function FormStep2() {\n  var router = useRouter();\n\n  var _useApp = useApp(),\n      locale = _useApp.locale,\n      objectsSignUp = _useApp.objectsSignUp;\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login;\n\n  var _useState = useState([]),\n      specialities = _useState[0],\n      setSpecialities = _useState[1];\n\n  var formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, _ref) {\n        var resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref.resetForm;\n                SendForm(formData, resetForm);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect(function () {\n    GetSpecialities();\n  }, [locale]);\n\n  var GetSpecialities = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var req, selectSpecial;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return request(nutri.get_specialities, null, null, {\n                locale: locale\n              });\n\n            case 2:\n              req = _context2.sent;\n\n              if (req != null) {\n                selectSpecial = map(req.result, function (element, index) {\n                  return {\n                    id: element.id,\n                    name: element.name\n                  };\n                });\n                setSpecialities(selectSpecial);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function GetSpecialities() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SendForm = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(formData, resetForm) {\n      var params, req;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              params = _objectSpread(_objectSpread({}, objectsSignUp.step_1), formData);\n              loadElement(true);\n              _context3.next = 4;\n              return request(nutri.post_signin, params, null, {\n                locale: locale\n              });\n\n            case 4:\n              req = _context3.sent;\n              loadElement(false);\n\n              if (!(req != null)) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 9;\n              return CreateMedicalSettings();\n\n            case 9:\n              // login(req);\n              // resetForm(initialValues());\n              // router.push(\"/signup_step_3\");\n              router.push(\"/\");\n              message_1(GetLanguage(\"validation\", \"success_request\"));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SendForm(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var CreateMedicalSettings = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var req;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              loadElement(true);\n              _context4.next = 3;\n              return request(medical.post_settings_medical, deafaultValues, null, {\n                locale: locale\n              });\n\n            case 3:\n              req = _context4.sent;\n              loadElement(false);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function CreateMedicalSettings() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var tagTerms = /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(TagLang, {\n      group: \"input\",\n      tag: \"aceptTerms\"\n    }), \" \", /*#__PURE__*/_jsx(SetLink, {\n      route: \"/terms\",\n      children: /*#__PURE__*/_jsx(TagLang, {\n        group: \"input\",\n        tag: \"aceptTerms_1\"\n      })\n    })]\n  });\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12 col-md-5\",\n        children: /*#__PURE__*/_jsx(FieldPic, {\n          formik: formik,\n          name: \"picture\"\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-12 col-md-7\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"col-12 col-md-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"name\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  name: \"firstName\",\n                  value: formik.values.firstName,\n                  onChange: formik.handleChange,\n                  type: \"text\"\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.firstName\n                })]\n              })]\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"col-12 col-md-6\",\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-cont-input-2\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-tag\",\n                children: /*#__PURE__*/_jsx(TagLang, {\n                  group: \"input\",\n                  tag: \"lastName\"\n                })\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-input\",\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  name: \"lastName\",\n                  value: formik.values.lastName,\n                  onChange: formik.handleChange,\n                  type: \"text\"\n                }), /*#__PURE__*/_jsx(MessageValidation, {\n                  error: formik.errors.lastName\n                })]\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"specialization\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(FieldSelect, {\n              formik: formik,\n              name: \"specialty\",\n              elements: specialities\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.specialty\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"professionalLicense\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              name: \"professionalLicense\",\n              value: formik.values.professionalLicense,\n              onChange: formik.handleChange,\n              type: \"text\"\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.professionalLicense\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"phone\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              name: \"phone\",\n              value: formik.values.phone,\n              onChange: formik.handleChange,\n              type: \"text\"\n            }), /*#__PURE__*/_jsx(MessageValidation, {\n              error: formik.errors.phone\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-checkbox-container\",\n          children: [/*#__PURE__*/_jsx(FieldCheck, {\n            formik: formik,\n            name: \"terms\",\n            tag: tagTerms\n          }), /*#__PURE__*/_jsx(MessageValidation, {\n            error: formik.errors.terms\n          })]\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"text-center sty-button-mrgin-1\",\n      children: /*#__PURE__*/_jsxs(\"button\", {\n        className: \"sty-button-dash-1\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-icon\",\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/static/img/favicons/app/save_w.svg\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"sty-tag\",\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"button\",\n            tag: \"save\"\n          })\n        })]\n      })\n    })]\n  });\n}\n\nfunction initialValues() {\n  return {\n    picture: null,\n    firstName: \"\",\n    lastName: \"\",\n    specialty: \"\",\n    professionalLicense: \"\",\n    phone: \"\",\n    terms: false\n  };\n}\n\nfunction validationSchema() {\n  return {\n    firstName: Yup.string().required(\"required\"),\n    lastName: Yup.string().required(\"required\"),\n    specialty: Yup.string().required(\"required\"),\n    professionalLicense: Yup.string().required(\"required\"),\n    phone: Yup.string().required(\"required\"),\n    terms: Yup[\"boolean\"]().oneOf([true], \"must_accept_terms\")\n  };\n}\n\nvar deafaultValues = {\n  reason: true,\n  notes: true,\n  diarrhea: true,\n  constipation: true,\n  gastritis: true,\n  ulcer: true,\n  nausea: true,\n  pyrosis: true,\n  vomit: true,\n  colitis: true,\n  observations: true,\n  disease: true,\n  pastDisease: true,\n  laxative: true,\n  diuretic: true,\n  antacid: true,\n  analgesic: true,\n  surgeries: true,\n  obesity: true,\n  diabetes: true,\n  hypertension: true,\n  cancer: true,\n  thyroidProblems: true,\n  dyslipidemia: true,\n  heartDisease: true,\n  gastrointestinalDisease: true,\n  otherDiseases: true,\n  pregnancy: true,\n  gestationalAge: true,\n  lastMenstrualPeriod: true,\n  hormonalProblems: true,\n  hormonalTherapy: true,\n  contraceptives: true,\n  climacteric: true,\n  alcohol: true,\n  smoke: true,\n  coffee: true,\n  meals: true,\n  allergies: true,\n  restrictions: true,\n  water: true,\n  dislikes: true,\n  preferred: true,\n  dietNotes: true\n};","map":null,"metadata":{},"sourceType":"module"}