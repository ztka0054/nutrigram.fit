{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport TagLang from \"../../modules/GetTagLang\";\nimport style from \"./selectlanguage.module.scss\";\nexport default function SelectLanguage(_ref) {\n  var children = _ref.children,\n      _ref$statusLanguage = _ref.statusLanguage,\n      statusLanguage = _ref$statusLanguage === void 0 ? 1 : _ref$statusLanguage,\n      _ref$setStatusLanguag = _ref.setStatusLanguage,\n      setStatusLanguage = _ref$setStatusLanguag === void 0 ? function () {} : _ref$setStatusLanguag,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? null : _ref$error;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: style.content,\n      id: error ? \"field_error\" : \"\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: style.languageTags,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"\".concat(style.languageTag, \" \").concat(statusLanguage == 1 ? style.active : \"\"),\n          onClick: function onClick() {\n            return setStatusLanguage(1);\n          },\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"spanish\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"\".concat(style.languageTag, \" \").concat(statusLanguage == 2 ? style.active : \"\"),\n          onClick: function onClick() {\n            return setStatusLanguage(2);\n          },\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"english\"\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: style.contData,\n        children: children\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"\".concat(style.tagError, \" \").concat(error ? style.active : \"\"),\n      children: /*#__PURE__*/_jsx(TagLang, {\n        group: \"validation\",\n        tag: error\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}