{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { size } from \"lodash\";\nimport moment from \"moment\";\nimport IconPlus from \"../../../../../components/Icons/Plus\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport ApiAppoinments from \"../../../../../../helper/core_services/endpoints/appointments\";\nimport utcFormat from \"../../../../../../helper/date/utcFormat\";\nimport TimeZoneDate from \"../../../../../../helper/date/getTimeZoneHour\";\nimport ListChanges from \"./ListChanges\";\nimport List from \"./ListAppoiments\";\nimport ModalNew from \"./ModalNew\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport style from \"./data.module.scss\";\nexport default function Data({\n  dateSelect,\n  availabilities,\n  setActiveRefresh\n}) {\n  const router = useRouter();\n  const {\n    locale\n  } = useRouter();\n  const {\n    0: activeModal,\n    1: setActiveModal\n  } = useState(false);\n  const {\n    0: appoiments,\n    1: setAppoiments\n  } = useState([]);\n  const {\n    0: changes,\n    1: setChanges\n  } = useState([]);\n  const {\n    0: activeRefreshList,\n    1: setActiveRefreshList\n  } = useState(false);\n  useEffect(() => {\n    let ignore = false;\n\n    const requestAppoimentsDay = async () => {\n      let resultAppoiments = await request(ApiAppoinments.get_appointments, {\n        datetime__gte: TimeZoneDate(utcFormat(dateSelect), \"00:00\").format(),\n        datetime__lte: TimeZoneDate(utcFormat(dateSelect), \"23:59\").format()\n      }, null, null, {\n        local: router.locale\n      });\n\n      if (resultAppoiments) {\n        let appoiments = resultAppoiments.result.filter(obj => obj.state === 2);\n        let changes = resultAppoiments.result.filter(obj => obj.state === 1);\n        setAppoiments(appoiments);\n        setChanges(changes);\n      }\n    };\n\n    requestAppoimentsDay();\n    return () => {\n      ignore = true;\n    };\n  }, [dateSelect, activeRefreshList]);\n  useEffect(() => {\n    if (activeModal) setActiveModal(false);\n  }, [activeModal]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ModalNew, {\n      availabilities: availabilities,\n      active: activeModal,\n      dateSelect: dateSelect,\n      setActiveRefresh: setActiveRefresh,\n      activeRefreshList: activeRefreshList,\n      setActiveRefreshList: setActiveRefreshList\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: style.cont,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: style.contHeader,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: style.date,\n          children: moment(dateSelect).locale(locale).format(\"dddd, MMMM DD\")\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: style.contButton,\n          children: moment(moment().format(\"YYYY-MM-DD\")).isSameOrBefore(moment(dateSelect)) && /*#__PURE__*/_jsx(\"div\", {\n            className: style.buttonAdd,\n            onClick: () => setActiveModal(true),\n            children: /*#__PURE__*/_jsx(IconPlus, {})\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: style.contInfo,\n        children: [/*#__PURE__*/_jsx(ListChanges, {\n          appoiments: changes,\n          setActiveRefresh: setActiveRefresh,\n          activeRefreshList: activeRefreshList,\n          setActiveRefreshList: setActiveRefreshList\n        }), size(changes) > 0 && /*#__PURE__*/_jsx(\"div\", {\n          className: style.lineChange\n        }), /*#__PURE__*/_jsx(List, {\n          appoiments: appoiments\n        }), size(appoiments) == 0 && size(changes) == 0 && /*#__PURE__*/_jsx(\"div\", {\n          className: style.noneList,\n          children: /*#__PURE__*/_jsx(TagLang, {\n            group: \"input\",\n            tag: \"none_quotes_list\"\n          })\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}