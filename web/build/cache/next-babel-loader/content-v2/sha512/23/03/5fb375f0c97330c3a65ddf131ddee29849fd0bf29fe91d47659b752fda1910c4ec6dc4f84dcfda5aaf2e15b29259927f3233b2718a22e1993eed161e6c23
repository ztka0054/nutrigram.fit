{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useMemo } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useStripe, useElements, CardNumberElement, CardCvcElement, CardExpiryElement } from \"@stripe/react-stripe-js\";\nimport useApp from \"../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport subscription from \"../../../../../../helper/core_services/endpoints/subscription\";\nimport GetLanguage from \"../../../../../../helper/i18n/getValueTagLang\";\nimport { loadElement } from \"../../../../../../helper/appearance/load\";\nimport { message_1 } from \"../../../../../../helper/appearance/messages\";\nconst cardVisa = \"/static/img/favicons/card/visa.svg\";\nconst cardMaster = \"/static/img/favicons/card/master.svg\";\nconst cardAmerica = \"/static/img/favicons/card/america.svg\";\nexport default function FormStripe() {\n  const stripe = useStripe();\n  const router = useRouter();\n  const elements = useElements();\n  const options = useOptions();\n  const {\n    locale,\n    objectsSignUp\n  } = useApp();\n  const {\n    0: messageError,\n    1: setMessageError\n  } = useState(null);\n  const {\n    0: brandCard,\n    1: setBrandCard\n  } = useState(null);\n\n  const PutBrandCard = e => {\n    if (e.elementType == \"cardNumber\") switch (e.brand) {\n      case \"visa\":\n        setBrandCard(1);\n        break;\n\n      case \"mastercard\":\n        setBrandCard(2);\n        break;\n\n      case \"amex\":\n        setBrandCard(3);\n        break;\n\n      default:\n        setBrandCard(0);\n        break;\n    }\n    if (typeof e.error != \"undefined\") setMessageError(e.error.code);else setMessageError(null);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    loadElement(true);\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      loadElement(false);\n      return;\n    }\n\n    const payload = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardNumberElement)\n    });\n    PayElement(payload);\n  };\n\n  const PayElement = async payload => {\n    if (typeof payload.paymentMethod != \"undefined\") {\n      let params = {\n        paymentMethodId: payload.paymentMethod.id,\n        price: objectsSignUp.selectedSubscritpion.id //invoiceId: moment().format('HH:mm:ss/DD/MM/YYYY')\n\n      };\n      loadElement(true);\n      let req = await request(subscription.post_subscription, params, null, locale, true, false);\n      loadElement(false);\n\n      if (req != null) {\n        message_1(GetLanguage(\"validation\", \"pay_message_1\"));\n        if (!(req !== null && req !== void 0 && req.code)) router.push(\"/dashboard/profile\");\n      } else {\n        loadElement(true);\n        let reqPatch = await request(subscription.patch_subscription, params, null, {\n          locale\n        });\n        loadElement(false);\n\n        if (reqPatch != null) {\n          message_1(GetLanguage(\"validation\", \"pay_message_1\"));\n          if (!(req !== null && req !== void 0 && req.code)) router.push(\"/dashboard/profile\");\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"cardNumber\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"sty-input\",\n            children: [/*#__PURE__*/_jsx(CardNumberElement, {\n              className: \"sty-input-card\",\n              options: options,\n              onReady: () => {\n                console.log(\"CardNumberElement [ready]\");\n              },\n              onChange: event => {\n                console.log(\"CardNumberElement [change]\", event);\n                PutBrandCard(event);\n              },\n              onBlur: () => {\n                console.log(\"CardNumberElement [blur]\");\n              },\n              onFocus: () => {\n                console.log(\"CardNumberElement [focus]\");\n              }\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"sty-brand\",\n              children: [brandCard == 0 && /*#__PURE__*/_jsx(_Fragment, {}), brandCard == 1 && /*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-cont-icon\",\n                children: /*#__PURE__*/_jsx(\"img\", {\n                  src: cardVisa\n                })\n              }), brandCard == 2 && /*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-cont-icon\",\n                children: /*#__PURE__*/_jsx(\"img\", {\n                  src: cardMaster\n                })\n              }), brandCard == 3 && /*#__PURE__*/_jsx(\"div\", {\n                className: \"sty-cont-icon\",\n                children: /*#__PURE__*/_jsx(\"img\", {\n                  src: cardAmerica\n                })\n              })]\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"expirationDate\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-input\",\n            children: /*#__PURE__*/_jsx(CardExpiryElement, {\n              className: \"sty-input-card\",\n              options: options,\n              onReady: () => {\n                console.log(\"CardNumberElement [ready]\");\n              },\n              onChange: event => {\n                console.log(\"CardNumberElement [change]\", event);\n              },\n              onBlur: () => {\n                console.log(\"CardNumberElement [blur]\");\n              },\n              onFocus: () => {\n                console.log(\"CardNumberElement [focus]\");\n              }\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"sty-cont-input-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"cvc\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-input\",\n            children: /*#__PURE__*/_jsx(CardCvcElement, {\n              className: \"sty-input-card\",\n              options: options,\n              onReady: () => {\n                console.log(\"CardNumberElement [ready]\");\n              },\n              onChange: event => {\n                console.log(\"CardNumberElement [change]\", event);\n              },\n              onBlur: () => {\n                console.log(\"CardNumberElement [blur]\");\n              },\n              onFocus: () => {\n                console.log(\"CardNumberElement [focus]\");\n              }\n            })\n          })]\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"col-12 sty-card-message\",\n      children: messageError && /*#__PURE__*/_jsx(\"div\", {\n        className: \"sty-mesage text-center\",\n        children: GetLanguage(\"validation\", messageError)\n      })\n    }), /*#__PURE__*/_jsx(\"button\", {\n      className: \"sty-button-dash-1 color_3 fix-24\",\n      type: \"submit\",\n      disabled: !stripe,\n      children: /*#__PURE__*/_jsx(TagLang, {\n        group: \"button\",\n        tag: \"pay\"\n      })\n    })]\n  });\n}\n\nconst useOptions = () => {\n  const options = useMemo(() => ({\n    style: {\n      base: {\n        fontSize: \"20.25px\",\n        color: \"#424770\",\n        letterSpacing: \"0.025em\",\n        fontFamily: \"Roboto, monospace\",\n        \"::placeholder\": {\n          color: \"#aab7c4\"\n        }\n      },\n      invalid: {\n        color: \"#9e2146\"\n      }\n    }\n  }));\n  return options;\n};","map":null,"metadata":{},"sourceType":"module"}