{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport TagLang from \"../../../modules/GetTagLang\";\nimport Validation from \"../Validation\";\nimport style from \"./input.module.scss\";\nconst initDate = moment(\"2020-01-01T10:00:00\").toDate();\nexport default function InputTimeForm_1({\n  formik,\n  title,\n  name,\n  value,\n  error,\n  maxHour\n}) {\n  const {\n    0: selectDate,\n    1: setSelectDate\n  } = useState(initDate);\n  useEffect(() => {\n    if (value) {\n      if (typeof value == \"string\") {\n        if (value != \"\") {\n          let date = moment(`${moment().format(\"YYYY-MM-DD\")}T${value}`).toDate();\n          setSelectDate(date);\n        }\n      }\n    } else {\n      let value = `${moment(initDate).format(\"HH:mm:ss\")}`;\n      formik.setFieldValue(name, value);\n    }\n  }, [value]);\n\n  const SelectDate = date => {\n    let value = `${moment(date).format(\"HH:mm:ss\")}`;\n    formik.setFieldValue(name, value);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: style.content,\n      id: error ? \"field_error\" : \"\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: style.tag,\n        children: /*#__PURE__*/_jsx(TagLang, {\n          group: \"input\",\n          tag: title\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: `${style.input} ${style.contPicker}`,\n        children: [/*#__PURE__*/_jsx(DatePicker, {\n          selected: selectDate,\n          onChange: date => SelectDate(date),\n          showTimeSelect: true,\n          showTimeSelectOnly: true,\n          timeIntervals: 15,\n          timeCaption: \"Time\",\n          dateFormat: \"h:mm aa\" // excludeTimes={excludeDates}\n          ,\n          minTime: moment(`${moment().format(\"YYYY-MM-DD\")}T00:00`).toDate(),\n          maxTime: moment(`${moment().format(\"YYYY-MM-DD\")}T${maxHour}`).toDate()\n        }), /*#__PURE__*/_jsx(Validation, {\n          error: error\n        })]\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}