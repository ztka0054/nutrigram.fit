{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport { Collapse, CardBody, Card } from \"reactstrap\";\nimport { map, size } from \"lodash\";\nimport useApp from \"../../../../../hooks/useApp\";\nimport TagLang from \"../../../../modules/GetTagLang\";\nimport GetLanguage from \"../../../../../helper/i18n/getValueTagLang\";\nimport request from \"../../../../../helper/core_services/core/requestService\";\nimport recipe from \"../../../../../helper/core_services/endpoints/recipes\";\nimport TablePag from \"../../../../modules/Dashboard/Table/TablePagination\";\nimport Rows from \"./SubEquivalentRow\";\nimport SubEquivalentFields from \"./SubEquivalentFields\";\nexport default function SubEquivalentColapse({\n  formik,\n  arrayHelpers,\n  father,\n  content,\n  index\n}) {\n  const {\n    locale\n  } = useApp();\n  const {\n    0: flagCollapse,\n    1: setflagCollapse\n  } = useState(true);\n  const valuesElement = formik.values[father][index];\n  useEffect(() => {\n    if (valuesElement !== null && valuesElement !== void 0 && valuesElement.recipe) PutDataRecipe(valuesElement.recipe);\n  }, [valuesElement === null || valuesElement === void 0 ? void 0 : valuesElement.recipe]);\n\n  const SelectEquivalent = row => {\n    PutDataRecipe(row);\n  };\n\n  const PutDataRecipe = async row => {\n    var _row$images, _row$images$;\n\n    setflagCollapse(false);\n    formik.setFieldValue(`${father}[${index}].equivalent`, row.id);\n    formik.setFieldValue(`${father}[${index}].name`, row.name);\n    formik.setFieldValue(`${father}[${index}].image`, (_row$images = row.images) === null || _row$images === void 0 ? void 0 : (_row$images$ = _row$images[0]) === null || _row$images$ === void 0 ? void 0 : _row$images$.image);\n    let req = await request(recipe.get_recipe, null, [row.id], {\n      locale\n    });\n    if (req != null) formik.setFieldValue(`${father}[${index}].ingredients`, req.ingredients);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!flagCollapse && /*#__PURE__*/_jsx(SubEquivalentFields, {\n      formik: formik,\n      arrayHelpers: arrayHelpers,\n      father: father,\n      content: content,\n      index: index\n    }), /*#__PURE__*/_jsx(Collapse, {\n      isOpen: flagCollapse,\n      className: \"sty-data-content\",\n      children: /*#__PURE__*/_jsx(Card, {\n        children: /*#__PURE__*/_jsx(CardBody, {\n          children: /*#__PURE__*/_jsx(TablePag, {\n            titles: [/*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"name\"\n            }), /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"difficulty\"\n            })],\n            titleTable: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"recipes_u\"\n            }),\n            tagCount: /*#__PURE__*/_jsx(TagLang, {\n              group: \"input\",\n              tag: \"recipes\"\n            }),\n            pageSize: 10,\n            endpoint: recipe.get_recipes,\n            Rows: Rows,\n            customFunction: SelectEquivalent\n          })\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}