{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Calendar from \"./Calendar\";\nimport Data from \"./DataSection\";\nimport request from \"../../../../../helper/core_services/core/requestService\";\nimport ApiAppoinments from \"../../../../../helper/core_services/endpoints/appointments\";\nimport style from \"./detail.module.scss\";\nexport default function Quotes() {\n  var router = useRouter();\n\n  var _useState = useState(new Date()),\n      dateSelect = _useState[0],\n      setDateSelect = _useState[1];\n\n  var _useState2 = useState([]),\n      availabilities = _useState2[0],\n      setAvailabilities = _useState2[1];\n\n  var _useState3 = useState(null),\n      unavailabilities = _useState3[0],\n      setUnavailabilities = _useState3[1];\n\n  var _useState4 = useState(true),\n      activeRefresh = _useState4[0],\n      setActiveRefresh = _useState4[1];\n\n  useEffect(function () {\n    if (!router.isReady) return;\n    var ignore = false;\n\n    function requestAvailavility() {\n      return _requestAvailavility.apply(this, arguments);\n    }\n\n    function _requestAvailavility() {\n      _requestAvailavility = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return request(ApiAppoinments.get_availabilities, null, null, {\n                  local: router.locale\n                });\n\n              case 2:\n                result = _context.sent;\n\n                if (result) {\n                  setAvailabilities(result.result);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _requestAvailavility.apply(this, arguments);\n    }\n\n    function requestUnavailabilities() {\n      return _requestUnavailabilities.apply(this, arguments);\n    }\n\n    function _requestUnavailabilities() {\n      _requestUnavailabilities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return request(ApiAppoinments.get_unavailabilities, null, null, {\n                  local: router.locale\n                });\n\n              case 2:\n                result = _context2.sent;\n\n                if (result) {\n                  setUnavailabilities(result.result);\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _requestUnavailabilities.apply(this, arguments);\n    }\n\n    requestAvailavility();\n    requestUnavailabilities();\n    return function () {\n      ignore = true;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: style.cont,\n    children: [/*#__PURE__*/_jsx(Calendar, {\n      setDateSelect: setDateSelect,\n      dateSelect: dateSelect,\n      unavailabilities: unavailabilities,\n      setActiveRefresh: setActiveRefresh,\n      activeRefresh: activeRefresh\n    }), /*#__PURE__*/_jsx(Data, {\n      dateSelect: dateSelect,\n      availabilities: availabilities,\n      setActiveRefresh: setActiveRefresh\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}