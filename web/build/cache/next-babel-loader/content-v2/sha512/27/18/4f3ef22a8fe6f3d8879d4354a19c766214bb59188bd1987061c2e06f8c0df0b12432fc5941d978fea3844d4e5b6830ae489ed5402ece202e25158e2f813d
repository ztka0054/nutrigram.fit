{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Collapse } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { map } from \"lodash\";\nimport useApp from \"../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../modules/GetTagLang\";\nimport request from \"../../../../../../helper/core_services/core/requestService\";\nimport consulation from \"../../../../../../helper/core_services/endpoints/consulation\";\nimport getTagLang from \"../../../../../../helper/i18n/getValueTagLang\";\nexport default function notes() {\n  var _useApp = useApp(),\n      locale = _useApp.locale;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useState = useState(false),\n      isOpenNote = _useState[0],\n      setIsOpenNote = _useState[1];\n\n  var _useState2 = useState([]),\n      elementsNotes = _useState2[0],\n      setElementsNotes = _useState2[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (query !== null && query !== void 0 && query.id) GetNotes();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [query, locale]);\n\n  var GetNotes = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var req, _elementsNotes;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return request(consulation.get_notes, null, [query.id], {\n                locale: locale\n              });\n\n            case 2:\n              req = _context2.sent;\n\n              if (req != null) {\n                _elementsNotes = map(req.result, function (element, index) {\n                  return /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"sty-note\",\n                    children: [/*#__PURE__*/_jsx(\"div\", {\n                      className: \"title\",\n                      children: /*#__PURE__*/_jsx(TagLang, {\n                        group: \"input\",\n                        tag: \"note\"\n                      })\n                    }), /*#__PURE__*/_jsx(\"div\", {\n                      className: \"content\",\n                      children: element.notes\n                    })]\n                  }, \"note_\".concat(index));\n                });\n                setElementsNotes(_elementsNotes);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function GetNotes() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var toggleNote = function toggleNote() {\n    setIsOpenNote(!isOpenNote);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"sty-cont-collapse-2\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"sty-header-collapse-1\",\n      onClick: toggleNote,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"tag\",\n        children: getTagLang(\"button\", \"notes\")\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faSortDown\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Collapse, {\n      className: \"sty-collapse-2\",\n      isOpen: isOpenNote,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"sty-cont-notes\",\n        children: elementsNotes\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}