{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\nimport * as Yup from \"yup\";\nimport moment from \"moment\";\nimport useApp from \"../../../../../../../../hooks/useApp\";\nimport TagLang from \"../../../../../../../modules/GetTagLang\";\nimport MessageValidation from \"../../../../../../../modules/Forms/MessageValidation\";\nimport request from \"../../../../../../../../helper/core_services/core/requestService\";\nimport consulation from \"../../../../../../../../helper/core_services/endpoints/consulation\";\nimport { loadElement } from \"../../../../../../../../helper/appearance/load\";\nimport FieldDocument from \"../../../../../../../../helper/forms/elements/document\";\nimport FieldDate from \"../../../../../../../../helper/forms/elements/date\";\nimport FieldTime from \"../../../../../../../../helper/forms/elements/time\";\nexport default function FormBiochemical(_ref) {\n  var ShowBiomedical = _ref.ShowBiomedical;\n\n  var _useApp = useApp(),\n      locale = _useApp.locale;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var formik = useFormik({\n    validateOnChange: false,\n    initialValues: initialValues(),\n    validationSchema: Yup.object(validationSchema()),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, _ref2) {\n        var resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm;\n                SendForm(formData);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n\n  var SendForm = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData) {\n      var newParams, req;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newParams = _objectSpread({}, formData);\n              newParams.datetime = \"\".concat(newParams.date, \"T\").concat(moment(newParams.hour).format(\"HH:mm:ss\"));\n              loadElement(true);\n              _context2.next = 5;\n              return request(consulation.post_analisys, newParams, [query.id], {\n                locale: locale\n              });\n\n            case 5:\n              req = _context2.sent;\n              loadElement(false);\n\n              if (req != null) {\n                ShowBiomedical();\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function SendForm(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-5\",\n        children: [/*#__PURE__*/_jsx(FieldDocument, {\n          formik: formik,\n          name: \"document\"\n        }), /*#__PURE__*/_jsx(MessageValidation, {\n          error: formik.errors.document\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-7\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"col-6\",\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-cont-input-2\",\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: \"sty-tag\",\n                  children: /*#__PURE__*/_jsx(TagLang, {\n                    group: \"input\",\n                    tag: \"date\"\n                  })\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"sty-input\",\n                  children: [/*#__PURE__*/_jsx(FieldDate, {\n                    formik: formik,\n                    name: \"date\"\n                  }), /*#__PURE__*/_jsx(MessageValidation, {\n                    error: formik.errors.date\n                  })]\n                })]\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-6\",\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-cont-input-2\",\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: \"sty-tag\",\n                  children: /*#__PURE__*/_jsx(TagLang, {\n                    group: \"input\",\n                    tag: \"hour\"\n                  })\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"sty-input\",\n                  children: [/*#__PURE__*/_jsx(FieldTime, {\n                    formik: formik,\n                    name: \"hour\"\n                  }), /*#__PURE__*/_jsx(MessageValidation, {\n                    error: formik.errors.hour\n                  })]\n                })]\n              })\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: \"sty-cont-input-2\",\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: \"sty-tag\",\n                  children: /*#__PURE__*/_jsx(TagLang, {\n                    group: \"input\",\n                    tag: \"name\"\n                  })\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"sty-input\",\n                  children: [/*#__PURE__*/_jsx(\"input\", {\n                    name: \"name\",\n                    type: \"text\",\n                    value: formik.values.name,\n                    onChange: formik.handleChange\n                  }), /*#__PURE__*/_jsx(MessageValidation, {\n                    error: formik.errors.name\n                  })]\n                })]\n              })\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12 text-center sty-magin-b-1\",\n        children: /*#__PURE__*/_jsxs(\"button\", {\n          className: \"sty-button-dash-1\",\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-icon\",\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: \"/static/img/favicons/app/save_w.svg\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"sty-tag\",\n            children: /*#__PURE__*/_jsx(TagLang, {\n              group: \"button\",\n              tag: \"save\"\n            })\n          })]\n        })\n      })]\n    })\n  });\n}\n\nfunction initialValues() {\n  return {\n    document: \"\",\n    name: \"\",\n    date: \"\",\n    hour: \"\"\n  };\n}\n\nfunction validationSchema() {\n  return {\n    document: Yup.string().required(\"required\"),\n    name: Yup.string().required(\"required\"),\n    date: Yup.string().required(\"required\"),\n    hour: Yup.string().required(\"required\")\n  };\n}","map":null,"metadata":{},"sourceType":"module"}